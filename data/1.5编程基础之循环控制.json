[
  {
    "id": "1716",
    "category": "1.5编程基础之循环控制",
    "title": "01:求平均年龄",
    "description": "<p>班上有学生若干名，给出每名学生的年龄（整数），求班上所有学生的平均年龄，保留到小数点后两位。</p>",
    "img": "",
    "inputTip": "第一行有一个整数n（1<= n <= 100），表示学生的人数。其后n行每行有1个整数，表示每个学生的年龄，取值为15到25。",
    "inputStyle": "输入",
    "outputTip": "输出",
    "outputStyle": "输出一行，该行包含一个浮点数，为要求的平均年龄，保留到小数点后两位。",
    "inputExample": "<pre>2\n18\n17\n</pre>",
    "outputExample": "<pre>17.50</pre>",
    "tip": "2005~2006医学部计算概论期末考试",
    "timeLimited": "1000ms",
    "spaceLimited": "65536kB"
  },
  {
    "id": "6",
    "category": "1.5编程基础之循环控制",
    "title": "02:财务管理",
    "description": "<p>Larry今年毕业并找到了一份工作。他赚很多钱，但似乎总是不够。Larry认为他需要控制他的投资以解决自己的财务问题。Larry拿到了自己的银行账户详单，想看看自己有多少钱。请帮助Larry写一个程序，通过过去12个月中每月的月末结余，计算平均结余。<br></p>",
    "img": "",
    "inputTip": "输入包含12行，每行包含一个数，为某个月的结余。每个数都是不大于1,000,000的正数，保留两位小数，省略\"$\"符。",
    "inputStyle": "输入",
    "outputTip": "输出",
    "outputStyle": "输出一个数，为这12个月的平均月末结余，保留到小数点后第二位，并在最前面加一个\"$\"符。",
    "inputExample": "<pre>100.00\n489.12\n12454.12\n1234.10\n823.05\n109.20\n5.27\n1542.25\n839.18\n83.99\n1295.01\n1.75</pre>",
    "outputExample": "<pre>$1581.42</pre>",
    "tip": "Mid-Atlantic 2001",
    "timeLimited": "1000ms",
    "spaceLimited": "65536kB"
  },
  {
    "id": "8180",
    "category": "1.5编程基础之循环控制",
    "title": "03:均值",
    "description": "<p><span style=\"font-family: 'Times New Roman';font-size: 14.6666669845581px;background-color: rgb(255, 255, 255)\">给出一组样本数据，计算其均值。</span><br></p>",
    "img": "",
    "inputTip": "输入有两行，第一行包含一个整数n（n小于100），代表样本容量；第二行包含n个绝对值不超过1000的浮点数，代表各个样本数据。",
    "inputStyle": "输入",
    "outputTip": "输出",
    "outputStyle": "输出一行，包含一个浮点数，表示均值，精确到小数点后4位。",
    "inputExample": "<pre>2\n1.0 3.0</pre>",
    "outputExample": "<pre>2.0000</pre>",
    "tip": "",
    "timeLimited": "1000ms",
    "spaceLimited": "65536kB"
  },
  {
    "id": "7582",
    "category": "1.5编程基础之循环控制",
    "title": "04:求整数的和与均值",
    "description": "<p>读入n（1 <= n <= 10000）个整数，求它们的和与均值。<br></p>",
    "img": "",
    "inputTip": "输入第一行是一个整数n，表示有n个整数。第2~n+1行每行包含1个整数。每个整数的绝对值均不超过10000。",
    "inputStyle": "输入",
    "outputTip": "输出",
    "outputStyle": "输出一行，先输出和，再输出平均值（保留到小数点后5位），两个数间用单个空格分隔。",
    "inputExample": "<pre>4\n344\n222\n343\n222</pre>",
    "outputExample": "<pre>1131 282.75000</pre>",
    "tip": "习题(8-6)",
    "timeLimited": "1000ms",
    "spaceLimited": "65536kB"
  },
  {
    "id": "6424",
    "category": "1.5编程基础之循环控制",
    "title": "05:最高的分数",
    "description": "<p>孙老师讲授的《计算概论》这门课期中考试刚刚结束，他想知道考试中取得的最高分数。因为人数比较多，他觉得这件事情交给计算机来做比较方便。你能帮孙老师解决这个问题吗？<br></p>",
    "img": "",
    "inputTip": "输入两行，第一行为整数n（1 <= n < 100），表示参加这次考试的人数.第二行是这n个学生的成绩，相邻两个数之间用单个空格隔开。所有成绩均为0到100之间的整数。",
    "inputStyle": "输入",
    "outputTip": "输出",
    "outputStyle": "输出一个整数，即最高的成绩。",
    "inputExample": "<pre>5\n85 78 90 99 60</pre>",
    "outputExample": "<pre>99</pre>",
    "tip": "",
    "timeLimited": "1000ms",
    "spaceLimited": "65536kB"
  },
  {
    "id": "8182",
    "category": "1.5编程基础之循环控制",
    "title": "06:整数序列的元素最大跨度值",
    "description": "<p><span style=\"font-family: 'Times New Roman';font-size: 14.6666669845581px;background-color: rgb(255, 255, 255)\">给定一个长度为n的非负整数序列，请计算序列的最大跨度值（最大跨度值 = 最大值减去最小值）。 </span><br></p>",
    "img": "",
    "inputTip": "一共2行，第一行为序列的个数n（1 <= n <= 1000)，第二行为序列的n个不超过1000的非负整数，整数之间以一个空格分隔。",
    "inputStyle": "输入",
    "outputTip": "输出",
    "outputStyle": "输出一行，表示序列的最大跨度值。",
    "inputExample": "<pre>6\n3 0 8 7 5 9</pre>",
    "outputExample": "<pre>9</pre>",
    "tip": "改编自 元培-From Whf",
    "timeLimited": "1000ms",
    "spaceLimited": "65536kB"
  },
  {
    "id": "6174",
    "category": "1.5编程基础之循环控制",
    "title": "07:奥运奖牌计数",
    "description": "<p>2008年北京奥运会，A国的运动员参与了n天的决赛项目(1≤n≤17)。现在要统计一下A国所获得的金、银、铜牌数目及总奖牌数。<br></p>",
    "img": "",
    "inputTip": "输入n＋1行，第1行是A国参与决赛项目的天数n，其后n行，每一行是该国某一天获得的金、银、铜牌数目，以一个空格分开。",
    "inputStyle": "输入",
    "outputTip": "输出",
    "outputStyle": "输出1行，包括4个整数，为A国所获得的金、银、铜牌总数及总奖牌数，以一个空格分开。",
    "inputExample": "<pre>3\n1 0 3\n3 1 0\n0 3 0</pre>",
    "outputExample": "<pre>4 4 3 11</pre>",
    "tip": "",
    "timeLimited": "1000ms",
    "spaceLimited": "65536kB"
  },
  {
    "id": "2757",
    "category": "1.5编程基础之循环控制",
    "title": "08:多边形内角和",
    "description": "<p>在欧几里德几何中，n边形的内角和是(n-2)*180°。已知其中(n-1)个内角的度数，就能计算出剩下的一个未知内角的度数。请编写一个程序，来解决这个问题。<br></p>",
    "img": "",
    "inputTip": "第1行只有一个整数n(2第2行有(n-1)个正整数，是每个已知内角的度数。相邻两个整数之间用单个空格隔开。数据保证给定多边形合法。",
    "inputStyle": "输入",
    "outputTip": "输出",
    "outputStyle": "一个正整数，为未知内角的度数。",
    "inputExample": "<pre>3\n45 60\n\n</pre>",
    "outputExample": "<pre>75\n</pre>",
    "tip": "",
    "timeLimited": "1000ms",
    "spaceLimited": "65536kB"
  },
  {
    "id": "6171",
    "category": "1.5编程基础之循环控制",
    "title": "09:奇数求和",
    "description": "<p>计算非负整数 m 到 n（包括m 和 n ）之间的所有奇数的和，其中，m 不大于 n，且n 不大于300。例如 m=3, n=12, 其和则为：3+5+7+9+11=35。<br></p>",
    "img": "",
    "inputTip": "两个数 m 和 n，两个数以一个空格分开，其中 0 <= m <= n <= 300 。",
    "inputStyle": "输入",
    "outputTip": "输出",
    "outputStyle": "输出一行，包含一个整数，表示m 到 n（包括m 和 n ）之间的所有奇数的和",
    "inputExample": "<pre>7 15</pre>",
    "outputExample": "<pre>55</pre>",
    "tip": "",
    "timeLimited": "1000ms",
    "spaceLimited": "65536kB"
  },
  {
    "id": "8179",
    "category": "1.5编程基础之循环控制",
    "title": "10:满足条件的数累加",
    "description": "<p><span style=\"font-family: 'Times New Roman';font-size: 14.6666669845581px;background-color: rgb(255, 255, 255)\">将正整数 m 和 n 之间（包括 m 和 n）能被 17 整除的数累加。其中，0 < m < n < 1000。</span><br></p>",
    "img": "",
    "inputTip": "一行，包含两个整数m和n，其间，以一个空格间隔。",
    "inputStyle": "输入",
    "outputTip": "输出",
    "outputStyle": "输出一行，包行一个整数，表示累加的结果。",
    "inputExample": "<pre>50 85</pre>",
    "outputExample": "<pre>204</pre>",
    "tip": "元培-From Whf",
    "timeLimited": "1000ms",
    "spaceLimited": "65536kB"
  },
  {
    "id": "1678",
    "category": "1.5编程基础之循环控制",
    "title": "11:整数的个数",
    "description": "<p>给定k（1<br>  < k < 100）个正整数，其中每个数都是大于等于1，小于等于10的数。写程序计算给定的k个正整数中，1，5和10出现的次数。</p>",
    "img": "",
    "inputTip": "输入有两行：第一行包含一个正整数k，第二行包含k个正整数，每两个正整数用一个空格分开。",
    "inputStyle": "输入",
    "outputTip": "输出",
    "outputStyle": "输出有三行，第一行为1出现的次数，，第二行为5出现的次数，第三行为10出现的次数。",
    "inputExample": "<pre>5\n1 5 8 10 5 \n</pre>",
    "outputExample": "<pre>1\n2\n1\n</pre>",
    "tip": "计算概论05－模拟考试1",
    "timeLimited": "1000ms",
    "spaceLimited": "65536kB"
  },
  {
    "id": "7926",
    "category": "1.5编程基础之循环控制",
    "title": "12:与指定数字相同的数的个数",
    "description": "<p><span style=\"color: rgb(35, 31, 23);font-family: 'Lucida Grande', Verdana, 'Bitstream Vera Sans', Arial, sans-serif;font-size: 14px\">输出一个整数序列中与指定数字相同的数的个数。</span><br></p>",
    "img": "",
    "inputTip": "输入包含2行：第1行为N和m，表示整数序列的长度(N <= 100)和指定的数字， 中间用一个空格分开；第2行为N个整数，整数之间以一个空格分开。",
    "inputStyle": "输入",
    "outputTip": "输出",
    "outputStyle": "输出为N个数中与m相同的数的个数。",
    "inputExample": "<pre>3 2\n2 3 2</pre>",
    "outputExample": "<pre>2</pre>",
    "tip": "",
    "timeLimited": "1000ms",
    "spaceLimited": "65536kB"
  },
  {
    "id": "8168",
    "category": "1.5编程基础之循环控制",
    "title": "13:乘方计算",
    "description": "<p>给出一个整数a和一个正整数n，求乘方a<sup>n</sup>。<br></p>",
    "img": "",
    "inputTip": "一行，包含两个整数a和n。-1000000 <= a <= 1000000，1 <= n <= 10000。",
    "inputStyle": "输入",
    "outputTip": "输出",
    "outputStyle": "一个整数，即乘方结果。题目保证最终结果的绝对值不超过1000000。",
    "inputExample": "<pre>2 3</pre>",
    "outputExample": "<pre>8</pre>",
    "tip": "",
    "timeLimited": "1000ms",
    "spaceLimited": "65536kB"
  },
  {
    "id": "7579",
    "category": "1.5编程基础之循环控制",
    "title": "14:人口增长问题",
    "description": "<p>我国现有x亿人口，按照每年0.1%的增长速度，n年后将有多少人？<br></p>",
    "img": "",
    "inputTip": "一行，包含两个整数x和n，分别是人口基数和年数，以单个空格分隔。",
    "inputStyle": "输入",
    "outputTip": "输出",
    "outputStyle": "输出最后的人口数，以亿为单位，保留到小数点后四位。1 <= x <= 100, 1 <= n <= 100。",
    "inputExample": "<pre>13 10</pre>",
    "outputExample": "<pre>13.1306</pre>",
    "tip": "习题(8-1)",
    "timeLimited": "1000ms",
    "spaceLimited": "65536kB"
  },
  {
    "id": "1392",
    "category": "1.5编程基础之循环控制",
    "title": "15:银行利息",
    "description": "<p>农夫约翰在去年赚了一大笔钱！他想要把这些钱用于投资，并对自己能得到多少收益感到好奇。已知投资的复合年利率为R（0到20之间的整数）。约翰现有总值为M的钱（100到1,000,000之间的整数）。他清楚地知道自己要投资Y年（范围0到400）。请帮助他计算最终他会有多少钱，并输出它的整数部分。数据保证输出结果在32位有符号整数范围内。<br></p>",
    "img": "",
    "inputTip": "一行包含三个整数R，M，Y，相邻两个整数之间用单个空格隔开。",
    "inputStyle": "输入",
    "outputTip": "输出",
    "outputStyle": "一个整数，即约翰最终拥有多少钱（整数部分）。",
    "inputExample": "<pre>5 5000 4</pre>",
    "outputExample": "<pre>6077</pre>",
    "tip": "在样例中，第一年后: 1.05 * 5000 = 5250第二年后: 1.05 * 5250 = 5512.5第三年后: 1.05 * 5512.50 = 5788.125第四年后: 1.05 * 5788.125 = 6077.531256077.53125的整数部分为6077。",
    "timeLimited": "1000ms",
    "spaceLimited": "65536kB"
  },
  {
    "id": "3094",
    "category": "1.5编程基础之循环控制",
    "title": "16:买房子",
    "description": "<p>某程序员开始工作，年薪N万，他希望在中关村公馆买一套60平米的房子，现在价格是200万，假设房子价格以每年百分之K增长，并且该程序员未来年薪不变，且不吃不喝，不用交税，每年所得N万全都积攒起来，问第几年能够买下这套房子？（第一年年薪N万，房价200万）</p>",
    "img": "",
    "inputTip": "一行，包含两个正整数N（10 <= N <= 50）, K（1 <= K <= 20），中间用单个空格隔开。",
    "inputStyle": "输入",
    "outputTip": "输出",
    "outputStyle": "如果在第20年或者之前就能买下这套房子，则输出一个整数M，表示最早需要在第M年能买下，否则输出Impossible。",
    "inputExample": "<pre>50 10\n</pre>",
    "outputExample": "<pre>8\n</pre>",
    "tip": "",
    "timeLimited": "1000ms",
    "spaceLimited": "65536kB"
  },
  {
    "id": "7783",
    "category": "1.5编程基础之循环控制",
    "title": "17:菲波那契数列",
    "description": "<p><span style=\"color: rgb(35, 31, 23);font-family: 'Lucida Grande', Verdana, 'Bitstream Vera Sans', Arial, sans-serif;font-size: 14px\">菲波那契数列是指这样的数列: 数列的第一个和第二个数都为1，接下来每个数都等于前面2个数之和。</span><br style=\"color: rgb(35, 31, 23); font-family: 'Lucida Grande', Verdana, 'Bitstream Vera Sans', Arial, sans-serif; font-size: 14px; line-height: 21px; white-space: normal;\"><span style=\"color: rgb(35, 31, 23);font-family: 'Lucida Grande', Verdana, 'Bitstream Vera Sans', Arial, sans-serif;font-size: 14px\">给出一个正整数k，要求菲波那契数列中第k个数是多少。</span><br></p>",
    "img": "",
    "inputTip": "输入一行，包含一个正整数k。（1 <= k <= 46）",
    "inputStyle": "输入",
    "outputTip": "输出",
    "outputStyle": "输出一行，包含一个正整数，表示菲波那契数列中第k个数的大小",
    "inputExample": "<pre>19</pre>",
    "outputExample": "<pre>4181</pre>",
    "tip": "1755",
    "timeLimited": "1000ms",
    "spaceLimited": "65536kB"
  },
  {
    "id": "6177",
    "category": "1.5编程基础之循环控制",
    "title": "18:鸡尾酒疗法",
    "description": "<p>鸡尾酒疗法，原指“高效抗逆转录病毒治疗”（HAART），由美籍华裔科学家何大一于1996年提出，是通过三种或三种以上的抗病毒药物联合使用来治疗艾\n滋病。该疗法的应用可以减少单一用药产生的抗药性，最大限度地抑制病毒的复制，使被破坏的机体免疫功能部分甚至全部恢复，从而延缓病程进展，延长患者生\n命，提高生活质量。人们在鸡尾酒疗法的基础上又提出了很多种改进的疗法。为了验证这些治疗方法是否在疗效上比鸡尾酒疗法更好，可用通过临床对照实验的方式\n进行。假设鸡尾酒疗法的有效率为x，新疗法的有效率为y，如果y-x大于5%，则效果更好，如果x-y大于5%，则效果更差，否则称为效果差不多。下面给\n出n组临床对照实验，其中第一组采用鸡尾酒疗法，其他n-1组为各种不同的改进疗法。请写程序判定各种改进疗法效果如何。<br></p>",
    "img": "",
    "inputTip": "第一行为整数n（ 1 < n <= 20）；其余n行每行两个整数，第一个整数是临床实验的总病例数(小于等于10000)，第二个疗效有效的病例数。这n行数据中，第一行为鸡尾酒疗法的数据，其余各行为各种改进疗法的数据。",
    "inputStyle": "输入",
    "outputTip": "输出",
    "outputStyle": "有n-1行输出，分别表示对应改进疗法的效果：如果效果更好，输出better；如果效果更差，输出worse；否则输出same",
    "inputExample": "<pre>5\n125 99\n112 89\n145 99\n99 97\n123 98</pre>",
    "outputExample": "<pre>same\nworse\nbetter\nsame</pre>",
    "tip": "",
    "timeLimited": "1000ms",
    "spaceLimited": "65536kB"
  },
  {
    "id": "7534",
    "category": "1.5编程基础之循环控制",
    "title": "19:救援",
    "description": "<p>救生船从大本营出发，营救若干屋顶上的人回到大本营，屋顶数目以及每个屋顶的坐标\n<br>和人数都将由输入决定，求出所有人都到达大本营并登陆所用的时间。\n<br><br>在直角坐标系的原点是大本营，救生船每次从大本营出发，救了人之后将人送回大本营。坐标系中的点代表屋顶，每个屋顶由其位置坐标和其上的人数表\n示。救生船每次从大本营出发，以速度50 米/分钟驶向下一个屋顶，达到一个屋顶后，救下其上的所有人，每人上船1 \n分钟，船原路返回，达到大本营，每人下船0.5 分钟。假设原点与任意一个屋顶的连线不穿过其它屋顶。<br></p>",
    "img": "",
    "inputTip": "第一行，一个整数，表示屋顶数n。接下来依次有n 行输入，每一行上包含两个表示屋顶相对于大本营的平面坐标位置的实数（单位是米）、一个表示人数的整数，数之间以一个空格分开。",
    "inputStyle": "输入",
    "outputTip": "输出",
    "outputStyle": "一行，救援需要的总时间，精确到分钟 (向上取整)。",
    "inputExample": "<pre>1\n30 40 3</pre>",
    "outputExample": "<pre>7</pre>",
    "tip": "",
    "timeLimited": "1000ms",
    "spaceLimited": "65536kB"
  },
  {
    "id": "2143",
    "category": "1.5编程基础之循环控制",
    "title": "20:球弹跳高度的计算",
    "description": "<p>一球从某一高度落下（整数，单位米），每次落地后反跳回原来高度的一半，再落下。<br>编程计算气球在第10次落地时，共经过多少米? 第10次反弹多高？<br></p>",
    "img": "",
    "inputTip": "输入一个整数h，表示球的初始高度。",
    "inputStyle": "输入",
    "outputTip": "输出",
    "outputStyle": "输出包含两行：第1行：到球第10次落地时，一共经过的米数。第2行：第10次弹跳的高度。注意：结果可能是实数，结果用double类型保存。提示：输出时不需要对精度特殊控制，用cout << ANSWER，或者printf(\"%g\", ANSWER)即可。",
    "inputExample": "<pre>20\n</pre>",
    "outputExample": "<pre>59.9219\n0.0195313\n</pre>",
    "tip": "计算概论2007, XieDi",
    "timeLimited": "1000ms",
    "spaceLimited": "65536kB"
  },
  {
    "id": "7784",
    "category": "1.5编程基础之循环控制",
    "title": "21:角谷猜想",
    "description": "<p><span style=\"color: rgb(35, 31, 23);font-family: 'Lucida Grande', Verdana, 'Bitstream Vera Sans', Arial, sans-serif;font-size: 14px\">所谓角谷猜想，是指对于任意一个正整数，如果是奇数，则乘3加1，如果是偶数，则除以2，得到的结果再按照上述规则重复处理，最终总能够得到1。如，假定初始整数为5，计算过程分别为16、8、4、2、1。 </span><br style=\"color: rgb(35, 31, 23); font-family: 'Lucida Grande', Verdana, 'Bitstream Vera Sans', Arial, sans-serif; font-size: 14px; line-height: 21px; white-space: normal;\"><span style=\"color: rgb(35, 31, 23);font-family: 'Lucida Grande', Verdana, 'Bitstream Vera Sans', Arial, sans-serif;font-size: 14px\">程序要求输入一个整数，将经过处理得到1的过程输出来。</span><br></p>",
    "img": "",
    "inputTip": "一个正整数N(N <= 2,000,000)",
    "inputStyle": "输入",
    "outputTip": "输出",
    "outputStyle": "从输入整数到1的步骤，每一步为一行，每一部中描述计算过程。最后一行输出\"End\"。如果输入为1，直接输出\"End\"。",
    "inputExample": "<pre>5</pre>",
    "outputExample": "<pre>5*3+1=16\n16/2=8\n8/2=4\n4/2=2\n2/2=1\nEnd</pre>",
    "tip": "6179",
    "timeLimited": "1000ms",
    "spaceLimited": "65536kB"
  },
  {
    "id": "7903",
    "category": "1.5编程基础之循环控制",
    "title": "22:津津的储蓄计划",
    "description": "<p>津津的零花钱一直都是自己管理。每个月的月初妈妈给津津300元钱，津津会预算这个月的花销，并且总能做到实际花销和预算的相同。</p><p>为了让津津学习如何储蓄，妈妈提出，津津可以随时把整百的钱存在她那里，到了年末她会加上20％还给津津。因此津津制定了一个储蓄计划：每个月的月初，在得到妈妈给的零花钱后，如果她预计到这个月的月末手中还会有多于100元或恰好100元，她就会把整百的钱存在妈妈那里，剩余的钱留在自己手中。</p><p>例如11月初津津手中还有83元，妈妈给了津津300元。津津预计11月的花销是180元，那么她就会在妈妈那里存200元，自己留下183元。到了11月月末，津津手中会剩下3元钱。</p><p>津津发现这个储蓄计划的主要风险是，存在妈妈那里的钱在年末之前不能取出。有可能在某个月的月初，津津手中的钱加上这个月妈妈给的钱，不够这个月的原定预算。如果出现这种情况，津津将不得不在这个月省吃俭用，压缩预算。</p><p>现在请你根据2004年1月到12月每个月津津的预算，判断会不会出现这种情况。如果不会，计算到2004年年末，妈妈将津津平常存的钱加上20％还给津津之后，津津手中会有多少钱。\n</p>",
    "img": "",
    "inputTip": "包括12行数据，每行包含一个小于350的非负整数，分别表示1月到12月津津的预算。",
    "inputStyle": "输入",
    "outputTip": "输出",
    "outputStyle": "包括一行，这一行只包含一个整数。如果储蓄计划实施过程中出现某个月钱不够用的情况，输出-X，X表示出现这种情况的第一个月；否则输出到2004年年末津津手中会有多少钱。",
    "inputExample": "<pre>样例 #1：\n290\n230\n280\n200\n300\n170\n340\n50 \n90 \n80 \n200\n60\n\n样例 #2：\n290 \n230 \n280 \n200 \n300 \n170 \n330 \n50 \n90 \n80 \n200 \n60\n</pre>",
    "outputExample": "<pre>样例 #1：\n-7\n\n样例 #2：\n1580</pre>",
    "tip": "NOIP2004复赛 提高组 第一题",
    "timeLimited": "1000ms",
    "spaceLimited": "65536kB"
  },
  {
    "id": "7541",
    "category": "1.5编程基础之循环控制",
    "title": "23:药房管理",
    "description": "<p>   随着信息技术的蓬勃发展，医疗信息化已经成为医院建设中必不可少的一部分。计算机可以很好地辅助医院管理医生信息、病人信息、药品信息等海量数据，使工作人员能够从这些机械的工作中解放出来，将更多精力投入真正的医疗过程中，从而极大地提高了医院整体的工作效率。\n<br>    对药品的管理是其中的一项重要内容。现在药房的管理员希望使用计算机来帮助他管理。假设对于任意一种药品，每天开始工作时的库存总量已\n知，并且一天之内不会通过进货的方式增加。每天会有很多病人前来取药，每个病人希望取走不同数量的药品。如果病人需要的数量超过了当时的库存量，药房会拒\n绝该病人的请求。管理员希望知道每天会有多少病人没有取上药。<br></p>",
    "img": "",
    "inputTip": "共3行第一行是每天开始时的药品总量m第二行是这一天取药的人数n（0 < n <= 100）第三行共有n个数，分别记录了每个病人希望取走的药品数量（按照时间先后的顺序），两数之间以空格分隔",
    "inputStyle": "输入",
    "outputTip": "输出",
    "outputStyle": "只有1行，为这一天没有取上药品的人数。",
    "inputExample": "<pre>30\n6\n10 5 20 6 7 8</pre>",
    "outputExample": "<pre>2</pre>",
    "tip": "习题(5-5) 医学部 2010 期末试题 李雁章",
    "timeLimited": "1000ms",
    "spaceLimited": "65536kB"
  },
  {
    "id": "7542",
    "category": "1.5编程基础之循环控制",
    "title": "24:正常血压",
    "description": "<p>监护室每小时测量一次病人的血压，若收缩压在90 - 140之间并且舒张压在60 - 90之间（包含端点值）则称之为正常，现给出某病人若干次测量的血压值，计算病人保持正常血压的最长小时数。<br></p>",
    "img": "",
    "inputTip": "第一行为一个正整数n，n < 100其后有n行，每行2个正整数，分别为一次测量的收缩压和舒张压，中间以一个空格分隔。",
    "inputStyle": "输入",
    "outputTip": "输出",
    "outputStyle": "输出仅一行，血压连续正常的最长小时数。",
    "inputExample": "<pre>4\n100 80\n90 50\n120 60\n140 90</pre>",
    "outputExample": "<pre>2</pre>",
    "tip": "习题(5-6) 医学部 2010 期末试题 周恺",
    "timeLimited": "1000ms",
    "spaceLimited": "65536kB"
  },
  {
    "id": "7918",
    "category": "1.5编程基础之循环控制",
    "title": "25:求特殊自然数",
    "description": "<p><span style=\"color: rgb(35, 31, 23);font-family: 'Lucida Grande', Verdana, 'Bitstream Vera Sans', Arial, sans-serif;font-size: 14px\">一个十进制自然数,它的七进制与九进制表示都是三位数，且七进制与九进制的三位数码表示顺序正好相反。编程求此自然数,并输出显示。</span><br></p>",
    "img": "",
    "inputTip": "无。",
    "inputStyle": "输入",
    "outputTip": "输出",
    "outputStyle": "三行：第一行是此自然数的十进制表示；第一行是此自然数的七进制表示；第一行是此自然数的九进制表示。",
    "inputExample": "<pre>（无）</pre>",
    "outputExample": "<pre>（不提供）</pre>",
    "tip": "",
    "timeLimited": "1000ms",
    "spaceLimited": "65536kB"
  },
  {
    "id": "7543",
    "category": "1.5编程基础之循环控制",
    "title": "26:统计满足条件的4位数个数",
    "description": "<p>给定若干个四位数，求出其中满足以下条件的数的个数：\n<br><br>个位数上的数字减去千位数上的数字，再减去百位数上的数字， 再减去十位数上的数字的结果大于零。<br></p>",
    "img": "",
    "inputTip": "输入为两行，第一行为四位数的个数n，第二行为n个的四位数，数与数之间以一个空格分开。(n <= 100)",
    "inputStyle": "输入",
    "outputTip": "输出",
    "outputStyle": "输出为一行，包含一个整数，表示满足条件的四位数的个数。",
    "inputExample": "<pre>5\n1234 1349 6119 2123 5017</pre>",
    "outputExample": "<pre>3</pre>",
    "tip": "习题(5-7)",
    "timeLimited": "1000ms",
    "spaceLimited": "65536kB"
  },
  {
    "id": "7892",
    "category": "1.5编程基础之循环控制",
    "title": "27:级数求和",
    "description": "<p>已知：Sn= 1＋1／2＋1／3＋…＋1／n。显然对于任意一个整数K，当n足够大的时候，Sn大于K。</p><p>现给出一个整数K（1<=k<=15），要求计算出一个最小的n；使得Sn＞K。\n</p>",
    "img": "",
    "inputTip": "一个整数K。",
    "inputStyle": "输入",
    "outputTip": "输出",
    "outputStyle": "一个整数n。",
    "inputExample": "<pre>1</pre>",
    "outputExample": "<pre>2</pre>",
    "tip": "NOIP2002复赛 普及组 第一题",
    "timeLimited": "1000ms",
    "spaceLimited": "65536kB"
  },
  {
    "id": "8181",
    "category": "1.5编程基础之循环控制",
    "title": "28:分离整数的各个数位",
    "description": "<p><span style=\"font-family: 'Times New Roman';font-size: 14.6666669845581px;background-color: rgb(255, 255, 255)\">给定一个整数，要求从个位开始分离出它的每一位数字。</span><br></p>",
    "img": "",
    "inputTip": "输入一个整数，整数在1到100000000之间。",
    "inputStyle": "输入",
    "outputTip": "输出",
    "outputStyle": "从个位开始按照从低位到高位的顺序依次输出每一位数字。数字之间以一个空格分开。",
    "inputExample": "<pre>123</pre>",
    "outputExample": "<pre>3 2 1</pre>",
    "tip": "",
    "timeLimited": "1000ms",
    "spaceLimited": "65536kB"
  },
  {
    "id": "7919",
    "category": "1.5编程基础之循环控制",
    "title": "29:数字反转",
    "description": "<p>给定一个整数，请将该数各个位上数字反转得到一个新数。新数也应满足整数的常见形式，即除非给定的原数为零，否则反转后得到的新数的最高位数字不应为零（参见样例2）。\n</p>",
    "img": "",
    "inputTip": "输入共 1 行，一个整数N。-1,000,000,000 ≤ N≤ 1,000,000,000。",
    "inputStyle": "输入",
    "outputTip": "输出",
    "outputStyle": "输出共 1 行，一个整数，表示反转后的新数。",
    "inputExample": "<pre>样例 #1：\n123\n\n样例 #2：\n-380</pre>",
    "outputExample": "<pre>样例 #1：\n321\n\n样例 #2：\n-83</pre>",
    "tip": "NOIP2011复赛 普及组 第一题",
    "timeLimited": "1000ms",
    "spaceLimited": "65536kB"
  },
  {
    "id": "6673",
    "category": "1.5编程基础之循环控制",
    "title": "30:含k个3的数",
    "description": "<p>输入两个正整数 m 和 k，其中1 < m < 100000，1 < k < 5 ，判断 m 能否被19整除，且恰好含有k个3，如果满足条件，则输出YES，否则，输出NO。\n<br><br>例如，输入：\n<br>43833 3\n<br>满足条件，输出YES。<br><br>如果输入：<br>39331 3\n<br>尽管有3个3，但不能被19整除，也不满足条件，应输出NO。<br></p>",
    "img": "",
    "inputTip": "m 和 k 的值，中间用单个空格间隔。",
    "inputStyle": "输入",
    "outputTip": "输出",
    "outputStyle": "满足条件时输出 YES，不满足时输出 NO。",
    "inputExample": "<pre>43833 3</pre>",
    "outputExample": "<pre>YES</pre>",
    "tip": "",
    "timeLimited": "1000ms",
    "spaceLimited": "65536kB"
  },
  {
    "id": "7597",
    "category": "1.5编程基础之循环控制",
    "title": "31:开关灯",
    "description": "<p>假设有N盏灯(N为不大于5000的正整数)，从1到N按顺序依次编号，初始时全部处于开启状态；有M个人(M为不大于N的正整数)也从1到M依次编号。</p><p>第一个人（1号）将灯全部关闭，第二个人（2号）将编号为2的倍数的灯打开，第三个人（3号）将编号为3的倍数的灯做相反处理（即，将打开的灯关闭，将关闭的灯打开）。依照编号递增顺序，以后的人都和3号一样，将凡是自己编号倍数的灯做相反处理。</p><p>请问：当第M个人操作之后，哪几盏灯是关闭的，按从小到大输出其编号，其间用逗号间隔。<br></p>",
    "img": "",
    "inputTip": "输入正整数N和M，以单个空格隔开。",
    "inputStyle": "输入",
    "outputTip": "输出",
    "outputStyle": "顺次输出关闭的灯的编号，其间用逗号间隔。",
    "inputExample": "<pre>10 10</pre>",
    "outputExample": "<pre>1,4,9</pre>",
    "tip": "元培-From Whf",
    "timeLimited": "1000ms",
    "spaceLimited": "65536kB"
  },
  {
    "id": "7718",
    "category": "1.5编程基础之循环控制",
    "title": "32:求分数序列和",
    "description": "<p><span style=\"color: rgb(35, 31, 23);font-family: 'Lucida Grande', Verdana, 'Bitstream Vera Sans', Arial, sans-serif;font-size: 14px\">有一个分数序列 q<sub>1</sub>/p<sub>1</sub>,q<sub>2</sub>/p<sub>2</sub>,q<sub>3</sub>/p<sub>3</sub>,q<sub>4</sub>/p<sub>4</sub>,q<sub>5</sub>/p<sub>5</sub>,.... ,其中q<sub>i+1</sub>= q<sub>i</sub>+ p<sub>i</sub>, p<sub>i+1</sub>=q<sub>i</sub>, p<sub>1</sub>= 1, q<sub>1</sub>= 2。比如这个序列前6项分别是<span style=\"color: rgb(35, 31, 23);font-family: 'Lucida Grande', Verdana, 'Bitstream Vera Sans', Arial, sans-serif;font-size: 14px\">2/1,3/2,5/3,8/5,13/8,21/13。</span>求这个分数序列的前n项之和。</span><br></p>",
    "img": "",
    "inputTip": "输入有一行，包含一个正整数n(n <= 30)。",
    "inputStyle": "输入",
    "outputTip": "输出",
    "outputStyle": "输出有一行，包含一个浮点数，表示分数序列前n项的和，精确到小数点后4位。",
    "inputExample": "<pre>2</pre>",
    "outputExample": "<pre>3.5000</pre>",
    "tip": "1685",
    "timeLimited": "1000ms",
    "spaceLimited": "65536kB"
  },
  {
    "id": "7584",
    "category": "1.5编程基础之循环控制",
    "title": "33:计算分数加减表达式的值",
    "description": "<p>编写程序，输入n的值，求 1/1 - 1/2 + 1/3 - 1/4 + 1/5 - 1/6 + 1/7 - 1/8 + ... + (-1)<sup>n-1</sup>·1/n 的值。<br></p>",
    "img": "",
    "inputTip": "输入一个正整数n。1 <= n <= 1000。",
    "inputStyle": "输入",
    "outputTip": "输出",
    "outputStyle": "输出一个实数，为表达式的值，保留到小数点后四位。",
    "inputExample": "<pre>2</pre>",
    "outputExample": "<pre>0.5000</pre>",
    "tip": "",
    "timeLimited": "1000ms",
    "spaceLimited": "65536kB"
  },
  {
    "id": "1686",
    "category": "1.5编程基础之循环控制",
    "title": "34:求阶乘的和",
    "description": "<p>给定正整数n，求不大于n的正整数的阶乘的和（即求1!+2!+3!+...+n!）</p>",
    "img": "",
    "inputTip": "输入有一行，包含一个正整数n（1 < n < 12）。",
    "inputStyle": "输入",
    "outputTip": "输出",
    "outputStyle": "输出有一行：阶乘的和。",
    "inputExample": "<pre>5</pre>",
    "outputExample": "<pre>153</pre>",
    "tip": "计算概论05",
    "timeLimited": "1000ms",
    "spaceLimited": "65536kB"
  },
  {
    "id": "1711",
    "category": "1.5编程基础之循环控制",
    "title": "35:求出e的值",
    "description": "利用公式e = 1 + 1/1! + 1/2! + 1/3! + ... + 1/n! 求e 。",
    "img": "",
    "inputTip": "输入只有一行，该行包含一个整数n（2<=n<=15），表示计算e时累加到1/n！。",
    "inputStyle": "输入",
    "outputTip": "输出",
    "outputStyle": "输出只有一行，该行包含计算出来的e的值，要求打印小数点后10位。",
    "inputExample": "<pre>10</pre>",
    "outputExample": "<pre>2.7182818011</pre>",
    "tip": "1、e以及n!用double表示2、要输出浮点数、双精度数小数点后10位数字，可以用下面这种形式：printf(\"%.10f\", num);",
    "timeLimited": "1000ms",
    "spaceLimited": "65536kB"
  },
  {
    "id": "7583",
    "category": "1.5编程基础之循环控制",
    "title": "36:计算多项式的值",
    "description": "<p>假定多项式的形式为x<sup>n</sup>+x<sup>n-1</sup>+…+x<sup>2</sup>+x+1，请计算给定单精度浮点数x和正整数n值的情况下这个多项式的值。<br></p>",
    "img": "",
    "inputTip": "输入仅一行，包括x和n，用单个空格隔开。x在float范围内，n <= 1000000。",
    "inputStyle": "输入",
    "outputTip": "输出",
    "outputStyle": "输出一个实数，即多项式的值，精确到小数点后两位。保证最终结果在float范围内。",
    "inputExample": "<pre>2.0 4</pre>",
    "outputExample": "<pre>31.00</pre>",
    "tip": "",
    "timeLimited": "1000ms",
    "spaceLimited": "65536kB"
  },
  {
    "id": "6042",
    "category": "1.5编程基础之循环控制",
    "title": "37:雇佣兵",
    "description": "<p><span style=\"font-size:12.0pt;font-family:宋体\">雇佣兵的体力最大值为</span><span style=\"font-size:12.0pt;font-family:'Calibri','sans-serif'\">M</span><span style=\"font-size:12.0pt;font-family:宋体\">，初始体力值为</span><span style=\"font-size:12.0pt;font-family:'Calibri','sans-serif'\">0</span><span style=\"font-size:12.0pt;font-family:宋体\">、战斗力为</span><span style=\"font-size:12.0pt;font-family:'Calibri','sans-serif'\">N</span><span style=\"font-size:12.0pt;font-family:宋体\">、拥有</span><span style=\"font-size:12.0pt;font-family:'Calibri','sans-serif'\">X</span><span style=\"font-size:12.0pt;font-family:宋体\">个能量元素。</span></p><p><span style=\"font-size:12.0pt;font-family:宋体\">当雇佣兵的体力值恰好为</span><span style=\"font-size:12.0pt;font-family:'Calibri','sans-serif'\">M</span><span style=\"font-size:12.0pt;font-family:宋体\">时，才可以参加一个为期</span><span style=\"font-size:12.0pt;font-family:'Calibri','sans-serif'\">M</span><span style=\"font-size:12.0pt;font-family:宋体\">天的战斗期，战斗期结束体力值将为</span><span style=\"font-size:12.0pt;font-family:'Calibri','sans-serif'\">0</span><span style=\"font-size:12.0pt;font-family:宋体\">。在同一个战斗期内，雇佣兵每连续战斗</span><span style=\"font-size:12.0pt;font-family:'Calibri','sans-serif'\">n</span><span style=\"font-size:12.0pt;font-family:宋体\">天，战斗力就会上升</span><span style=\"font-size:12.0pt;font-family:'Calibri','sans-serif'\">1</span><span style=\"font-size:12.0pt;font-family:宋体\">点，</span><span style=\"font-size:12.0pt;font-family:'Calibri','sans-serif'\">n为</span><span style=\"font-size:12.0pt;font-family:宋体\">当前战斗期开始时的战斗力。</span></p><p><span style=\"font-size:12.0pt;font-family:宋体\">一个战斗期结束后，雇佣兵需要用若干个能量元素使其体力恢复到最大值M，从而参加下一个战斗期。每个能量元素恢复的体力值不超过当前的战斗力。每个能量元素只能使用一次。</span></p><p><span style=\"font-size:12.0pt;font-family:宋体\">请问：雇佣兵的战斗力最大可以到达多少。</span></p>",
    "img": "",
    "inputTip": "一行包括三个整数M、N、X，相邻两个整数之间用单个空格隔开。M、N、X均为不超过10000的正整数。",
    "inputStyle": "输入",
    "outputTip": "输出",
    "outputStyle": "输出一个整数，为雇佣兵的最大战斗力。",
    "inputExample": "<pre>5 2 10</pre>",
    "outputExample": "<pre>6</pre>",
    "tip": "",
    "timeLimited": "1000ms",
    "spaceLimited": "65536kB"
  },
  {
    "id": "4974",
    "category": "1.5编程基础之循环控制",
    "title": "38:计算多项式的导函数",
    "description": "<p style=\"margin-bottom: 0in; line-height: 150%\"><span style=\"font-family:DejaVu Sans\">计算多项式的导函数是一件非常容易的任务。给定一个函数</span>f(x)<span style=\"font-family:DejaVu Sans\">，我们用</span>f'(x)<span style=\"font-family:DejaVu Sans\">来表示其导函数。我们用</span>x^n<span style=\"font-family:DejaVu Sans\">来表示</span>x<span style=\"font-family:DejaVu Sans\">的</span>n<span style=\"font-family:DejaVu Sans\">次幂。为了计算多项式的导函数，你必须知道三条规则：</span></p><p style=\"margin-bottom: 0in; line-height: 150%\">(1)<span style=\"font-family:DejaVu Sans\">、</span>(C)' = 0 <span style=\"font-family:DejaVu Sans\">如果</span>C<span style=\"font-family:DejaVu Sans\">是常量</span></p><p style=\"margin-bottom: 0in; line-height: 150%\">(2)<span style=\"font-family:DejaVu Sans\">、</span>(C*x^n)' = C*n*x^(n-1) <span style=\"font-family:DejaVu Sans\">如果</span>n >= 1<span style=\"font-family:DejaVu Sans\">且</span>C<span style=\"font-family:DejaVu Sans\">是常量</span></p><p style=\"margin-bottom: 0in; line-height: 150%\">(3)<span style=\"font-family:DejaVu Sans\">、</span>(f<sub>1</sub>(x)+f<sub>2</sub>(2))' = f<sub>1</sub><span style=\"line-height: 24px; white-space: normal;\">'</span>(x)+f<sub>2</sub><span style=\"line-height: 24px; white-space: normal;\">'</span>(x)</p><p style=\"margin-bottom: 0in; line-height: 150%\"><span style=\"font-family:DejaVu Sans\">容易证明，多项式的导函数也是多项式。</span></p><p style=\"margin-bottom: 0in; line-height: 150%\"><span style=\"font-family:DejaVu Sans\">现在，请你编写一个程序，给定一个不包含负系数且已合并好同幂次项的多项式</span>f(x)<span style=\"font-family:DejaVu Sans\">，计算出它的导函数。</span></p>",
    "img": "",
    "inputTip": "输入有两行。第一行是一个整数n（0 <= n <= 100）表明多项式的最高次幂为n。第二行包含n+1个非负整数，Cn ，Cn-1 ，Cn-2 ，Cn-3 ，Cn-4 ，… ，C1，C0（0 <= Ci <= 1000）且Cn != 0。Ci是幂次为i的项的系数。",
    "inputStyle": "输入",
    "outputTip": "输出",
    "outputStyle": "在一行内输出f'(x)的结果。（1） 如果g(x) = 0那么直接输出0（2） 如果g(x)形如Cm(x^m)+Cm-1(x^(m-1))+…+C0(Cm!=0)那么输出Cm…C0（3） 相邻整数之间有单个空格。",
    "inputExample": "<pre>3\n0\n10\n2\n3 2 1\n3\n10 0 1 2</pre>",
    "outputExample": "<pre>0\n6 2\n30 0 1</pre>",
    "tip": "",
    "timeLimited": "1000ms",
    "spaceLimited": "65536kB"
  },
  {
    "id": "1703",
    "category": "1.5编程基础之循环控制",
    "title": "39:与7无关的数",
    "description": "<p>一个正整数,如果它能被7整除,或者它的十进制表示法中某一位上的数字为7,则称其为与7相关的数.现求所有小于等于n(n < 100)的与7无关的正整数的平方和.</p>",
    "img": "",
    "inputTip": "输入为一行,正整数n(n < 100)",
    "inputStyle": "输入",
    "outputTip": "输出",
    "outputStyle": "输出一行，包含一个整数，即小于等于n的所有与7无关的正整数的平方和。",
    "inputExample": "<pre>21</pre>",
    "outputExample": "<pre>2336</pre>",
    "tip": "计算概论05",
    "timeLimited": "1000ms",
    "spaceLimited": "65536kB"
  },
  {
    "id": "7585",
    "category": "1.5编程基础之循环控制",
    "title": "40:数1的个数",
    "description": "<p>给定一个十进制正整数n，写下从1到n的所有整数，然后数一下其中出现的数字“1”的个数。</p><p>例如当n=2时，写下1,2。这样只出现了1个“1”；当n=12时，写下1，2，3，4，5，6，7，8，9，10，11，12。这样出现了5个“1”。<br></p>",
    "img": "",
    "inputTip": "正整数n。1 <= n <= 10000。",
    "inputStyle": "输入",
    "outputTip": "输出",
    "outputStyle": "一个正整数，即“1”的个数。",
    "inputExample": "<pre>12</pre>",
    "outputExample": "<pre>5</pre>",
    "tip": "习题(8-11) 医学部 2010 期末试题 尤朝",
    "timeLimited": "1000ms",
    "spaceLimited": "65536kB"
  },
  {
    "id": "7916",
    "category": "1.5编程基础之循环控制",
    "title": "41:数字统计",
    "description": "<p>请统计某个给定范围[L, R]的所有整数中，数字2出现的次数。</p><p>比如给定范围[2, 22]，数字2在数2中出现了1次，在数12中出现1次，在数20中出现1次，在数21中出现1次，在数22中出现2次，所以数字2在该范围内一共出现了6次。\n</p>",
    "img": "",
    "inputTip": "输入共 1 行，为两个正整数 L 和 R，之间用一个空格隔开。",
    "inputStyle": "输入",
    "outputTip": "输出",
    "outputStyle": "输出共 1 行，表示数字 2 出现的次数。",
    "inputExample": "<pre>样例 #1：\n2 22\n\n样例 #2：\n2 100</pre>",
    "outputExample": "<pre>样例 #1：\n6\n\n样例 #2：\n20</pre>",
    "tip": "NOIP2010复赛 普及组 第一题",
    "timeLimited": "1000ms",
    "spaceLimited": "65536kB"
  },
  {
    "id": "8183",
    "category": "1.5编程基础之循环控制",
    "title": "42:画矩形",
    "description": "<p><span style=\"font-family: 'Times New Roman';font-size: 14.6666669845581px;background-color: rgb(255, 255, 255)\">根据参数，画出矩形。</span><br></p>",
    "img": "",
    "inputTip": "输入一行，包括四个参数：前两个参数为整数，依次代表矩形的高和宽（高不少于3行不多于10行，宽不少于5列不多于10列）；第三个参数是一个字符，表示用来画图的矩形符号；第四个参数为1或0，0代表空心，1代表实心。",
    "inputStyle": "输入",
    "outputTip": "输出",
    "outputStyle": "输出画出的图形。",
    "inputExample": "<pre>7 7 @ 0</pre>",
    "outputExample": "<pre>@@@@@@@\n@     @\n@     @\n@     @\n@     @\n@     @\n@@@@@@@</pre>",
    "tip": "",
    "timeLimited": "1000ms",
    "spaceLimited": "65536kB"
  },
  {
    "id": "7922",
    "category": "1.5编程基础之循环控制",
    "title": "43:质因数分解",
    "description": "<p>已知正整数 n 是两个不同的质数的乘积，试求出较大的那个质数。\n</p>",
    "img": "",
    "inputTip": "输入只有一行，包含一个正整数 n。对于60%的数据，6 ≤ n ≤ 1000。对于100%的数据，6 ≤ n ≤ 2*10^9。",
    "inputStyle": "输入",
    "outputTip": "输出",
    "outputStyle": "输出只有一行，包含一个正整数 p，即较大的那个质数。",
    "inputExample": "<pre>21</pre>",
    "outputExample": "<pre>7</pre>",
    "tip": "NOIP2012复赛 普及组 第一题",
    "timeLimited": "1000ms",
    "spaceLimited": "65536kB"
  },
  {
    "id": "8163",
    "category": "1.5编程基础之循环控制",
    "title": "44:第n小的质数",
    "description": "<p>输入一个正整数n，求第n小的质数。</p>",
    "img": "",
    "inputTip": "一个不超过10000的正整数n。",
    "inputStyle": "输入",
    "outputTip": "输出",
    "outputStyle": "第n小的质数。",
    "inputExample": "<pre>10</pre>",
    "outputExample": "<pre>29</pre>",
    "tip": "",
    "timeLimited": "1000ms",
    "spaceLimited": "65536kB"
  },
  {
    "id": "7878",
    "category": "1.5编程基础之循环控制",
    "title": "45:金币",
    "description": "<p style=\"white-space: normal;\"></p><p style=\"white-space: normal;\">国王将金币作为工资，发放给忠诚的骑士。第一天，骑士收到一枚金币；之后两天（第二天和第三天）里，每天收到两枚金币；之后三天（第四、五、六天）里，每天收到三枚金币；之后四天（第七、八、九、十天）里，每天收到四枚金币……这种工资发放模式会一直这样延续下去：当连续N天每天收到N枚金币后，骑士会在之后的连续N+1天里，每天收到N+1枚金币（N为任意正整数）。<br></p><p style=\"white-space: normal;\">你需要编写一个程序，确定从第一天开始的给定天数内，骑士一共获得了多少金币。<br></p>",
    "img": "",
    "inputTip": "一个整数（范围1到10000），表示天数。",
    "inputStyle": "输入",
    "outputTip": "输出",
    "outputStyle": "骑士获得的金币数。",
    "inputExample": "<pre>6</pre>",
    "outputExample": "<pre>14</pre>",
    "tip": "Rocky Mountain 2004",
    "timeLimited": "1000ms",
    "spaceLimited": "65536kB"
  }
]