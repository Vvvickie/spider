[
  {
    "id": "8115",
    "category": "1.9编程基础之顺序查找",
    "title": "01:查找特定的值",
    "description": "<p>在一个序列（下标从1开始）中查找一个给定的值，输出第一次出现的位置。<br></p>",
    "img": "",
    "inputTip": "第一行包含一个正整数n，表示序列中元素个数。1 <= n <= 10000。第二行包含n个整数，依次给出序列的每个元素，相邻两个整数之间用单个空格隔开。元素的绝对值不超过10000。第三行包含一个整数x，为需要查找的特定值。x的绝对值不超过10000。",
    "inputStyle": "输入",
    "outputTip": "输出",
    "outputStyle": "若序列中存在x，输出x第一次出现的下标；否则输出-1。",
    "inputExample": "<pre>5\n2 3 6 7 3\n3\n</pre>",
    "outputExample": "<pre>2</pre>",
    "tip": "",
    "timeLimited": "1000ms",
    "spaceLimited": "65536kB"
  },
  {
    "id": "7607",
    "category": "1.9编程基础之顺序查找",
    "title": "02:输出最高分数的学生姓名",
    "description": "<p>输入学生的人数，然后再输入每位学生的分数和姓名，求获得最高分数的学生的姓名。<br></p>",
    "img": "",
    "inputTip": "第一行输入一个正整数N（N <= 100），表示学生人数。接着输入N行，每行格式如下：分数 姓名分数是一个非负整数，且小于等于100；姓名为一个连续的字符串，中间没有空格，长度不超过20。数据保证最高分只有一位同学。",
    "inputStyle": "输入",
    "outputTip": "输出",
    "outputStyle": "获得最高分数同学的姓名。",
    "inputExample": "<pre>5\n87 lilei\n99 hanmeimei\n97 lily\n96 lucy\n77 jim</pre>",
    "outputExample": "<pre>hanmeimei</pre>",
    "tip": "习题(13-1)",
    "timeLimited": "1000ms",
    "spaceLimited": "65536kB"
  },
  {
    "id": "7894",
    "category": "1.9编程基础之顺序查找",
    "title": "03:不高兴的津津",
    "description": "<p>津津上初中了。妈妈认为津津应该更加用功学习，所以津津除了上学之外，还要参加妈妈为她报名的各科复习班。另外每周妈妈还会送她去学习朗诵、舞蹈和钢琴。但是津津如果一天上课超过八个小时就会不高兴，而且上得越久就会越不高兴。假设津津不会因为其它事不高兴，并且她的不高兴不会持续到第二天。请你帮忙检查一下津津下周的日程安排，看看下周她会不会不高兴；如果会的话，哪天最不高兴。\n</p>",
    "img": "",
    "inputTip": "包括七行数据，分别表示周一到周日的日程安排。每行包括两个小于10的非负整数，用空格隔开，分别表示津津在学校上课的时间和妈妈安排她上课的时间。",
    "inputStyle": "输入",
    "outputTip": "输出",
    "outputStyle": "包括一行，这一行只包含一个数字。如果不会不高兴则输出0，如果会则输出最不高兴的是周几（用1, 2, 3, 4, 5, 6, 7分别表示周一，周二，周三，周四，周五，周六，周日）。如果有两天或两天以上不高兴的程度相当，则输出时间最靠前的一天。",
    "inputExample": "<pre>5 3\n6 2\n7 2\n5 3\n5 4\n0 4\n0 6\n</pre>",
    "outputExample": "<pre>3</pre>",
    "tip": "NOIP2004复赛 普及组 第一题",
    "timeLimited": "1000ms",
    "spaceLimited": "65536kB"
  },
  {
    "id": "7906",
    "category": "1.9编程基础之顺序查找",
    "title": "04:谁拿了最多奖学金",
    "description": "<p>某校的惯例是在每学期的期末考试之后发放奖学金。发放的奖学金共有五种，获取的条件各自不同：</p><p>1)     院士奖学金，每人8000元，期末平均成绩高于80分（>80），并且在本学期内发表1篇或1篇以上论文的学生均可获得；</p><p>2)     五四奖学金，每人4000元，期末平均成绩高于85分（>85），并且班级评议成绩高于80分（>80）的学生均可获得；</p><p>3)     成绩优秀奖，每人2000元，期末平均成绩高于90分（>90）的学生均可获得；</p><p>4)     西部奖学金，每人1000元，期末平均成绩高于85分（>85）的西部省份学生均可获得；</p><p>5)     班级贡献奖，每人850元，班级评议成绩高于80分（>80）的学生干部均可获得；</p><p>只要符合条件就可以得奖，每项奖学金的获奖人数没有限制，每名学生也可以同时获得多项奖学金。例如姚林的期末平均成绩是87分，班级评议成绩82分，同时他还是一位学生干部，那么他可以同时获得五四奖学金和班级贡献奖，奖金总数是4850元。</p><p><br></p><p>现在给出若干学生的相关数据，请计算哪些同学获得的奖金总数最高（假设总有同学能满足获得奖学金的条件）。\n</p>",
    "img": "",
    "inputTip": "第一行是一个整数N（1 <= N <= 100），表示学生的总数。接下来的N行每行是一位学生的数据，从左向右依次是姓名，期末平均成绩，班级评议成绩，是否是学生干部，是否是西部省份学生，以及发表的论文数。姓名是由大小写英文字母组成的长度不超过20的字符串（不含空格）；期末平均成绩和班级评议成绩都是0到100之间的整数（包括0和100）；是否是学生干部和是否是西部省份学生分别用一个字符表示，Y表示是，N表示不是；发表的论文数是0到10的整数（包括0和10）。每两个相邻数据项之间用一个空格分隔。",
    "inputStyle": "输入",
    "outputTip": "输出",
    "outputStyle": "包括三行，第一行是获得最多奖金的学生的姓名，第二行是这名学生获得的奖金总数。如果有两位或两位以上的学生获得的奖金最多，输出他们之中在输入文件中出现最早的学生的姓名。第三行是这N个学生获得的奖学金的总数。",
    "inputExample": "<pre>4\nYaoLin 87 82 Y N 0\nChenRuiyi 88 78 N Y 1\nLiXin 92 88 N N 0\nZhangQin 83 87 Y N 1\n</pre>",
    "outputExample": "<pre>ChenRuiyi\n9000\n28700\n</pre>",
    "tip": "NOIP2005复赛 提高组 第一题",
    "timeLimited": "1000ms",
    "spaceLimited": "65536kB"
  },
  {
    "id": "7608",
    "category": "1.9编程基础之顺序查找",
    "title": "05:最大值和最小值的差",
    "description": "<p>输出一个整数序列中最大的数和最小的数的差。<br></p>",
    "img": "",
    "inputTip": "第一行为M，表示整数个数，整数个数不会大于10000；第二行为M个整数，以空格隔开，每个整数的绝对值不会大于10000。",
    "inputStyle": "输入",
    "outputTip": "输出",
    "outputStyle": "输出M个数中最大值和最小值的差。",
    "inputExample": "<pre>5\n2 5 7 4 2</pre>",
    "outputExample": "<pre>5</pre>",
    "tip": "",
    "timeLimited": "1000ms",
    "spaceLimited": "65536kB"
  },
  {
    "id": "7912",
    "category": "1.9编程基础之顺序查找",
    "title": "06:笨小猴",
    "description": "<p>笨小猴的词汇量很小，所以每次做英语选择题的时候都很头疼。但是他找到了一种方法，经试验证明，用这种方法去选择选项的时候选对的几率非常大！</p><p>这种方法的具体描述如下：假设maxn是单词中出现次数最多的字母的出现次数，minn是单词中出现次数最少的字母的出现次数，如果maxn-minn是一个质数，那么笨小猴就认为这是个Lucky Word，这样的单词很可能就是正确的答案。\n</p>",
    "img": "",
    "inputTip": "只有一行，是一个单词，其中只可能出现小写字母，并且长度小于100。",
    "inputStyle": "输入",
    "outputTip": "输出",
    "outputStyle": "共两行，第一行是一个字符串，假设输入的的单词是Lucky Word，那么输出“Lucky Word”，否则输出“No Answer”；第二行是一个整数，如果输入单词是Lucky Word，输出maxn-minn的值，否则输出0。",
    "inputExample": "<pre>样例 #1：\nerror\n\n样例 #2：\nolympic</pre>",
    "outputExample": "<pre>样例 #1：\nLucky Word\n2\n\n样例 #2：\nNo Answer\n0</pre>",
    "tip": "单词error中出现最多的字母r出现了3次，出现次数最少的字母出现了1次，3-1=2，2是质数。单词olympic中出现最多的字母i出现了2次，出现次数最少的字母出现了1次，2-1=1，1不是质数。",
    "timeLimited": "1000ms",
    "spaceLimited": "65536kB"
  },
  {
    "id": "6595",
    "category": "1.9编程基础之顺序查找",
    "title": "07:不与最大数相同的数字之和",
    "description": "<p>输出一个整数数列中不与最大数相同的数字之和。<br></p>",
    "img": "",
    "inputTip": "输入分为两行：第一行为N(N为接下来数的个数，N <= 100)；第二行为N个整数，数与数之间以一个空格分开，每个整数的范围是-1000,000到1000,000。",
    "inputStyle": "输入",
    "outputTip": "输出",
    "outputStyle": "输出为N个数中除去最大数其余数字之和。",
    "inputExample": "<pre>3\n1 2 3 </pre>",
    "outputExample": "<pre>3</pre>",
    "tip": "",
    "timeLimited": "1000ms",
    "spaceLimited": "65536kB"
  },
  {
    "id": "7613",
    "category": "1.9编程基础之顺序查找",
    "title": "08:白细胞计数",
    "description": "<p>医院采样了某临床病例治疗期间的白细胞数量样本n份，用于分析某种新抗生素对该病例的治疗效果。为了降低分析误差，要先从这n份样本中去除一个数值最大的\n样本和一个数值最小的样本，然后将剩余n-2个有效样本的平均值作为分析指标。同时，为了观察该抗生素的疗效是否稳定，还要给出该平均值的误差，即所有有\n效样本（即不包括已扣除的两个样本）与该平均值之差的绝对值的最大值。\n<br><br>现在请你编写程序，根据提供的n个样本值，计算出该病例的平均白细胞数量和对应的误差。<br></p>",
    "img": "",
    "inputTip": "输入的第一行是一个正整数n（2 < n <= 300），表明共有n个样本。以下共有n行，每行为一个浮点数，为对应的白细胞数量，其单位为10^9/L。数与数之间以一个空格分开。",
    "inputStyle": "输入",
    "outputTip": "输出",
    "outputStyle": "输出为两个浮点数，中间以一个空格分开。分别为平均白细胞数量和对应的误差，单位也是10^9/L。计算结果需保留到小数点后2位。",
    "inputExample": "<pre>5\n12.0\n13.0\n11.0\n9.0\n10.0</pre>",
    "outputExample": "<pre>11.00 1.00</pre>",
    "tip": "为避免浮点精度误差过大，请使用double类型。",
    "timeLimited": "1000ms",
    "spaceLimited": "65536kB"
  },
  {
    "id": "7596",
    "category": "1.9编程基础之顺序查找",
    "title": "09:直方图",
    "description": "<p>给定一个非负整数数组，统计里面每一个数的出现次数。我们只统计到数组里最大的数。 </p><p>假设 Fmax （Fmax < 10000）是数组里最大的数，那么我们只统计\n{0,1,2.....Fmax} 里每个数出现的次数。<br></p>",
    "img": "",
    "inputTip": "第一行n是数组的大小。1 <= n <= 10000。紧接着一行是数组的n个元素。",
    "inputStyle": "输入",
    "outputTip": "输出",
    "outputStyle": "按顺序输出每个数的出现次数，一行一个数。如果没有出现过，则输出0。对于例子中的数组，最大的数是3，因此我们只统计{0,1,2,3}的出现频数。",
    "inputExample": "<pre>5\n1 1 2 3 1</pre>",
    "outputExample": "<pre>0\n3\n1 \n1</pre>",
    "tip": "",
    "timeLimited": "1000ms",
    "spaceLimited": "65536kB"
  },
  {
    "id": "6242",
    "category": "1.9编程基础之顺序查找",
    "title": "10:找最大数序列",
    "description": "<p>输入n行，每行不超过100个无符号整数，无符号数不超过4位。请输出最大整数以及最大整数所在的行号（行号从1开始）。如果该数据在多个行中出现，则按从小到大输出相应行号，行号之间以一个逗号分开。<br></p>",
    "img": "",
    "inputTip": "一行输入一个正整数n（n <= 30）。之后的n行，每行包含不超过100个无符号整数，整数之间以一个逗号分开。",
    "inputStyle": "输入",
    "outputTip": "输出",
    "outputStyle": "第一行：最大整数；第二行：最大整数所在的行编号，逗号间隔。",
    "inputExample": "<pre>6\n1,3,5,23,6,8,14\n20,22,13,4,16\n23,12,17,22\n2,6,10,9,3,6\n22,21,20,8,10\n22,1,23,6,8,19,23</pre>",
    "outputExample": "<pre>23\n1,3,6</pre>",
    "tip": "",
    "timeLimited": "1000ms",
    "spaceLimited": "65536kB"
  },
  {
    "id": "8116",
    "category": "1.9编程基础之顺序查找",
    "title": "11:连续出现的字符",
    "description": "<p>给定一个字符串，在字符串中找到第一个连续出现至少k次的字符。</p>",
    "img": "",
    "inputTip": "第一行包含一个正整数k，表示至少需要连续出现的次数。1 <= k <= 1000。第二行包含需要查找的字符串。字符串长度在1到1000之间，且不包含任何空白符。",
    "inputStyle": "输入",
    "outputTip": "输出",
    "outputStyle": "若存在连续出现至少k次的字符，输出该字符；否则输出No。",
    "inputExample": "<pre>3\nabcccaaab</pre>",
    "outputExample": "<pre>c</pre>",
    "tip": "",
    "timeLimited": "1000ms",
    "spaceLimited": "65536kB"
  },
  {
    "id": "7744",
    "category": "1.9编程基础之顺序查找",
    "title": "12:最长平台",
    "description": "<p><span style=\"color: rgb(35, 31, 23);font-family: 'Lucida Grande', Verdana, 'Bitstream Vera Sans', Arial, sans-serif;font-size: 14px\">已知一个已经从小到大排序的数组，这个数组的一个平台（Plateau）就是连续的一串值相同的元素，并且这一串元素不能再延伸。例如，在 1，2，2，3，3，3，4，5，5，6中1，2-2，3-3-3，4，5-5，6都是平台。试编写一个程序，接收一个数组，把这个数组最长的平台找出 来。在上面的例子中3-3-3就是最长的平台。</span><br></p>",
    "img": "",
    "inputTip": "第一行有一个整数n(n <= 1000)，为数组元素的个数。第二行有n个整数，整数之间以一个空格分开。",
    "inputStyle": "输入",
    "outputTip": "输出",
    "outputStyle": "输出最长平台的长度。",
    "inputExample": "<pre>10\n1 2 2 3 3 3 4 5 5 6</pre>",
    "outputExample": "<pre>3</pre>",
    "tip": "D.Gries. The Science of Programming, Springer-Verlag, 1981",
    "timeLimited": "1000ms",
    "spaceLimited": "65536kB"
  },
  {
    "id": "7611",
    "category": "1.9编程基础之顺序查找",
    "title": "13:整数去重",
    "description": "<p>给定含有n个整数的序列，要求对这个序列进行去重操作。所谓去重，是指对这个序列中每个重复出现的数，只保留该数第一次出现的位置，删除其余位置。<br></p>",
    "img": "",
    "inputTip": "输入包含两行：第一行包含一个正整数n（1 <= n <= 20000），表示第二行序列中数字的个数；第二行包含n个整数，整数之间以一个空格分开。每个整数大于等于10、小于等于100。",
    "inputStyle": "输入",
    "outputTip": "输出",
    "outputStyle": "输出只有一行，按照输入的顺序输出其中不重复的数字，整数之间用一个空格分开。",
    "inputExample": "<pre>5\n10 12 93 12 75</pre>",
    "outputExample": "<pre>10 12 93 75</pre>",
    "tip": "习题(13-9)",
    "timeLimited": "1000ms",
    "spaceLimited": "65536kB"
  },
  {
    "id": "7921",
    "category": "1.9编程基础之顺序查找",
    "title": "14:铺地毯",
    "description": "<p>为了准备一个独特的颁奖典礼，组织者在会场的一片矩形区域（可看做是平面直角坐标系的第一象限）铺上一些矩形地毯。一共有n张地毯，编号从1到n。现在将这些地毯按照编号从小到大的顺序平行于坐标轴先后铺设，后铺的地毯覆盖在前面已经铺好的地毯之上。地毯铺设完成后，组织者想知道覆盖地面某个点的最上面的那张地毯的编号。注意：在矩形地毯边界和四个顶点上的点也算被地毯覆盖。\n</p><p>输入输出样例1说明：如下图，1号地毯用实线表示，2号地毯用虚线表示，3号用双实线表示，覆盖点（2，2）的最上面一张地毯是3号地毯。\n</p><p><span style=\"white-space: normal;\">输入输出样例2说明</span><span style=\"white-space: normal;\">：</span><span style=\"white-space: normal;\">如下图，1号地毯用实线表示，2号地毯用虚线表示，3号用双实线表示，覆盖点（4，5）的最上面一张地毯是3</span><span style=\"white-space: normal;\">号地毯。</span><br></p><p style=\"text-align: center;\"><span style=\"white-space: normal;\"><img src=\"http://media.openjudge.cn/images/upload/1423035598.png\" width=\"240\" height=\"215\"><br></span></p><p><br></p>",
    "img": "",
    "inputTip": "输入共n+2行。第一行，一个整数n，表示总共有n张地毯。接下来的n行中，第i+1行表示编号i的地毯的信息，包含四个正整数a，b，g，k，每两个整数之间用一个空格隔开，分别表示铺设地毯的左下角的坐标（a，b）以及地毯在x轴和y轴方向的长度。第n+2行包含两个正整数x和y，表示所求的地面的点的坐标（x，y）。对于30%的数据，有n≤2；对于50%的数据，0≤a, b, g, k≤100；对于100%的数据，有0≤n≤10,000，0≤a, b, g, k≤100,000。",
    "inputStyle": "输入",
    "outputTip": "输出",
    "outputStyle": "输出共1行，一个整数，表示所求的地毯的编号；若此处没有被地毯覆盖则输出-1。",
    "inputExample": "<pre>样例 #1：\n3\n1 0 2 3\n0 2 3 3\n2 1 3 3\n2 2\n\n样例 #2：\n3\n1 0 2 3\n0 2 3 3\n2 1 3 3\n4 5</pre>",
    "outputExample": "<pre>样例 #1：\n3\n\n样例 #2：\n-1</pre>",
    "tip": "NOIP2011复赛 提高组 第一题",
    "timeLimited": "1000ms",
    "spaceLimited": "65536kB"
  },
  {
    "id": "7917",
    "category": "1.9编程基础之顺序查找",
    "title": "15:接水问题",
    "description": "<p>学校里有一个水房，水房里一共装有 m 个龙头可供同学们打开水，每个龙头每秒钟的供水量相等，均为 1。</p><p>现在有 n 名同学准备接水，他们的初始接水顺序已经确定。将这些同学按接水顺序从 1 到 n 编号，i号同学的接水量为 w<sub>i</sub>。接水开始时，1 到 m 号同学各占一个水龙头，并同时打开水龙头接水。当其中某名同学 j 完成其接水量要求 w<sub>j</sub>后，下一名排队等候接水的同学 k 马上接替 j 同学的位置开始接水。这个换人的过程是瞬间完成的，且没有任何水的浪费。即 j 同学第 x 秒结束时完成接水，则 k 同学第 x+1 秒立刻开始接水。 若当前接水人数 n’不足 m，则只有 n’个龙头供水，其它 m-n’个龙头关闭。</p><p>现在给出 n 名同学的接水量，按照上述接水规则，问所有同学都接完水需要多少秒。\n</p>",
    "img": "",
    "inputTip": "第 1 行2 个整数 n 和 m，用一个空格隔开，分别表示接水人数和龙头个数。第 2 行 n 个整数 w1、w2、……、wn，每两个整数之间用一个空格隔开，wi表示 i 号同学的接水量。1 ≤ n ≤ 10000，1 ≤ m ≤ 100 且 m ≤ n；1 ≤ wi ≤ 100。",
    "inputStyle": "输入",
    "outputTip": "输出",
    "outputStyle": "输出只有一行，1 个整数，表示接水所需的总时间。",
    "inputExample": "<pre>样例 #1：\n5 3\n4 4 1 2 1\n\n样例 #2：\n8 4\n23 71 87 32 70 93 80 76</pre>",
    "outputExample": "<pre>样例 #1：\n4\n\n样例 #2：\n163</pre>",
    "tip": "输入输出样例1解释：第 1 秒，3 人接水。第 1秒结束时，1、2、3 号同学每人的已接水量为 1，3 号同学接完水，4 号同学接替 3 号同学开始接水。第 2 秒，3 人接水。第 2 秒结束时，1、2 号同学每人的已接水量为 2，4 号同学的已接水量为 1。第 3 秒，3 人接水。第 3 秒结束时，1、2 号同学每人的已接水量为 3，4 号同学的已接水量为 2。4号同学接完水，5 号同学接替 4 号同学开始接水。第 4 秒，3 人接水。第 4 秒结束时，1、2 号同学每人的已接水量为 4，5 号同学的已接水量为 1。1、2、5 号同学接完水，即所有人完成接水。总接水时间为 4 秒。",
    "timeLimited": "1000ms",
    "spaceLimited": "65536kB"
  }
]