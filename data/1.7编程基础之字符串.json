[
  {
    "id": "7546",
    "category": "1.7编程基础之字符串",
    "title": "01:统计数字字符个数",
    "description": "<p>输入一行字符，统计出其中数字字符的个数。<br></p>",
    "img": "",
    "inputTip": "一行字符串，总长度不超过255。",
    "inputStyle": "输入",
    "outputTip": "输出",
    "outputStyle": "输出为1行，输出字符串里面数字字符的个数。",
    "inputExample": "<pre>Peking University is set up at 1898.</pre>",
    "outputExample": "<pre>4</pre>",
    "tip": "习题(7-1) 医学部 2010 期末试题 樊波",
    "timeLimited": "1000ms",
    "spaceLimited": "65536kB"
  },
  {
    "id": "7804",
    "category": "1.7编程基础之字符串",
    "title": "02:找第一个只出现一次的字符",
    "description": "<p><span style=\"white-space: normal;\">给定一个只包含小写字母的字符串，</span><span style=\"white-space: normal;\">请你找到第一个仅出现一次的字符。如果没有，输出no。</span><br></p>",
    "img": "",
    "inputTip": "一个字符串，长度小于100000。",
    "inputStyle": "输入",
    "outputTip": "输出",
    "outputStyle": "输出第一个仅出现一次的字符，若没有则输出no。",
    "inputExample": "<pre>abcabd</pre>",
    "outputExample": "<pre>c</pre>",
    "tip": "",
    "timeLimited": "1000ms",
    "spaceLimited": "65536kB"
  },
  {
    "id": "7548",
    "category": "1.7编程基础之字符串",
    "title": "03:基因相关性",
    "description": "<p>为了获知基因序列在功能和结构上的相似性，经常需要将几条不同序列的DNA进行比对，以判断该比对的DNA是否具有相关性。 </p><p>现比对两条长度相同的DNA序列。首先定义两条DNA序列相同位置的碱基为一个碱基对，如果一个碱基对中的两个碱基相同的话，则称为相同碱基对。接着计算相同碱基对占总碱基对数量的比例，如果该比例大于等于给定阈值时则判定该两条DNA序列是相关的，否则不相关。</p>",
    "img": "",
    "inputTip": "有三行，第一行是用来判定出两条DNA序列是否相关的阈值，随后2行是两条DNA序列（长度不大于500）。",
    "inputStyle": "输入",
    "outputTip": "输出",
    "outputStyle": "若两条DNA序列相关，则输出“yes”，否则输出“no”。",
    "inputExample": "<pre>0.85\nATCGCCGTAAGTAACGGTTTTAAATAGGCC\nATCGCCGGAAGTAACGGTCTTAAATAGGCC</pre>",
    "outputExample": "<pre>yes</pre>",
    "tip": "习题(7-5)",
    "timeLimited": "1000ms",
    "spaceLimited": "65536kB"
  },
  {
    "id": "7599",
    "category": "1.7编程基础之字符串",
    "title": "04:石头剪子布",
    "description": "<p>石头剪子布，是一种猜拳游戏。起源于中国，然后传到日本、朝鲜等地，随着亚欧贸易的不断发展它传到了欧洲，到了近现代逐渐风靡世界。简单明了的规则，使得石头剪子布没有任何规则漏洞可钻，单次玩法比拼运气，多回合玩法比拼心理博弈，使得石头剪子布这个古老的游戏同时用于“意外”与“技术”两种特性，深受世界人民喜爱。\n<br><br>游戏规则：石头打剪刀，布包石头，剪刀剪布。\n<br><br>现在，需要你写一个程序来判断石头剪子布游戏的结果。</p>",
    "img": "",
    "inputTip": "输入包括N+1行：第一行是一个整数N，表示一共进行了N次游戏。1 <= N <= 100。接下来N行的每一行包括两个字符串，表示游戏参与者Player1，Player2的选择（石头、剪子或者是布）：S1 S2字符串之间以空格隔开S1,S2只可能取值在{\"Rock\", \"Scissors\", \"Paper\"}（大小写敏感）中。",
    "inputStyle": "输入",
    "outputTip": "输出",
    "outputStyle": "输出包括N行，每一行对应一个胜利者（Player1或者Player2），或者游戏出现平局，则输出Tie。",
    "inputExample": "<pre>3\nRock Scissors\nPaper Paper\nRock Paper</pre>",
    "outputExample": "<pre>Player1\nTie\nPlayer2</pre>",
    "tip": "Rock是石头，Scissors是剪刀，Paper是布。",
    "timeLimited": "1000ms",
    "spaceLimited": "65536kB"
  },
  {
    "id": "7547",
    "category": "1.7编程基础之字符串",
    "title": "05:输出亲朋字符串",
    "description": "<p>编写程序，求给定字符串s的亲朋字符串s1。\n<br><br>亲朋字符串s1定义如下：给定字符串s的第一个字符的ASCII值加第二个字符的ASCII值，得到第一个亲朋字符； \n给定字符串s的第二个字符的ASCII值加第三个字符的ASCII值，得到第二个亲朋字符；依此类推，直到给定字符串s的倒数第二个字符。亲朋字符串的最\n后一个字符由给定字符串s的最后一个字符ASCII值加s的第一个字符的ASCII值。<br></p>",
    "img": "",
    "inputTip": "输入一行，一个长度大于等于2，小于等于100的字符串。字符串中每个字符的ASCII值不大于63。",
    "inputStyle": "输入",
    "outputTip": "输出",
    "outputStyle": "输出一行，为变换后的亲朋字符串。输入保证变换后的字符串只有一行。",
    "inputExample": "<pre>1234</pre>",
    "outputExample": "<pre>cege</pre>",
    "tip": "",
    "timeLimited": "1000ms",
    "spaceLimited": "65536kB"
  },
  {
    "id": "8172",
    "category": "1.7编程基础之字符串",
    "title": "06:合法 C 标识符",
    "description": "<p><span style=\"font-family: 'Times New Roman';font-size: 14.6666669845581px;background-color: rgb(255, 255, 255)\">给定一个不包含空白符的字符串，请判断是否是C语言合法的标识符号（注：题目保证这些字符串一定不是C语言的保留字）</span><span style=\"background-color: rgb(255, 255, 255);\">。</span></p><p><span style=\"background-color: rgb(255, 255, 255);\">C语言标识符要求：</span></p><p><span style=\"background-color: rgb(255, 255, 255);\">1. 非保留字；</span></p><p><span style=\"background-color: rgb(255, 255, 255);\">2. 只包含字母、数字及下划线（“_”）。</span></p><p><span style=\"background-color: rgb(255, 255, 255);\">3. 不以数字开头。</span></p>",
    "img": "",
    "inputTip": "一行，包含一个字符串，字符串中不包含任何空白字符，且长度不大于20。",
    "inputStyle": "输入",
    "outputTip": "输出",
    "outputStyle": "一行，如果它是C语言的合法标识符，则输出yes，否则输出no。",
    "inputExample": "<pre>RKPEGX9R;TWyYcp</pre>",
    "outputExample": "<pre>no</pre>",
    "tip": "北京大学 计算概论 06 心理及信管 期末考试",
    "timeLimited": "1000ms",
    "spaceLimited": "65536kB"
  },
  {
    "id": "7805",
    "category": "1.7编程基础之字符串",
    "title": "07:配对碱基链",
    "description": "<p><span style=\"white-space: normal;\">脱氧核糖核酸（DNA）由两条互补的碱基链以双螺旋的方式结合而成。而构成DNA的碱基共有4种，分别为腺瞟呤（A）、鸟嘌呤（G）、胸腺嘧啶（T）和胞</span><span style=\"white-space: normal;\">嘧啶（C）。我们知道，在两条互补碱基链的对应位置上，腺瞟呤总是和胸腺嘧啶配对，鸟嘌呤总是和胞嘧啶配对。你的任务就是根据一条单链上的碱基序列，给出对应的互补链上的碱基序列。</span><br></p>",
    "img": "",
    "inputTip": "一个字符串，表示一条碱基链。这个字符串只含有大写字母A、T、G、C，分别表示腺瞟呤、胸腺嘧啶、鸟嘌呤和胞嘧啶。字符串长度不超过255。",
    "inputStyle": "输入",
    "outputTip": "输出",
    "outputStyle": "一个只含有大写字母A、T、G、C的字符串，为与输入的碱基链互补的碱基链。",
    "inputExample": "<pre>ATATGGATGGTGTTTGGCTCTG</pre>",
    "outputExample": "<pre>TATACCTACCACAAACCGAGAC</pre>",
    "tip": "",
    "timeLimited": "1000ms",
    "spaceLimited": "65536kB"
  },
  {
    "id": "1702",
    "category": "1.7编程基础之字符串",
    "title": "08:字符替换",
    "description": "<p>把一个字符串中特定的字符全部用给定的字符替换，得到一个新的字符串。</p>",
    "img": "",
    "inputTip": "只有一行，由一个字符串和两个字符组成，中间用单个空格隔开。字符串是待替换的字符串，字符串长度小于等于30个字符，且不含空格等空白符；接下来一个字符为需要被替换的特定字符；接下来一个字符为用于替换的给定字符。",
    "inputStyle": "输入",
    "outputTip": "输出",
    "outputStyle": "一行，即替换后的字符串。",
    "inputExample": "<pre>hello-how-are-you o O</pre>",
    "outputExample": "<pre>hellO-hOw-are-yOu</pre>",
    "tip": "计算概论05",
    "timeLimited": "1000ms",
    "spaceLimited": "65536kB"
  },
  {
    "id": "8173",
    "category": "1.7编程基础之字符串",
    "title": "09:密码翻译",
    "description": "<p><span style=\"color: rgb(35, 31, 23);font-family: 'Lucida Grande', Verdana, 'Bitstream Vera Sans', Arial, sans-serif;font-size: 14px\">在情报传递过程中，为了防止情报被截获，往往需要对情报用一定的方式加密，简单的加密算法虽然不足以完全避免情报被破译，但仍然能防止情报被轻易的识别。我们给出一种最简的的加密方法，对给定的一个字符串，把其中从a-y，A-Y的字母用其后继字母替代，把z和Z用a和A替代，其他非字母字符不变，则可得到一个简单的加密字符串。</span><br></p>",
    "img": "",
    "inputTip": "输入一行，包含一个字符串，长度小于80个字符。",
    "inputStyle": "输入",
    "outputTip": "输出",
    "outputStyle": "输出每行字符串的加密字符串。",
    "inputExample": "<pre>Hello! How are you!</pre>",
    "outputExample": "<pre>Ifmmp! Ipx bsf zpv!</pre>",
    "tip": "计算概论05",
    "timeLimited": "1000ms",
    "spaceLimited": "65536kB"
  },
  {
    "id": "1769",
    "category": "1.7编程基础之字符串",
    "title": "10:简单密码",
    "description": "<p>Julius Caesar曾经使用过一种很简单的密码。对于明文中的每个字符，将它用它字母表中后5位对应的字符来代替，这样就得到了密文。比如字符A用F来代替。如下是密文和明文中字符的对应关系。<br><br>密文<br>A B C D E F G H I J K L M N O P Q R S T U V W X Y Z<br><br>明文<br>V W X Y Z A B C D E F G H I J K L M N O P Q R S T U <br><br>你的任务是对给定的密文进行解密得到明文。<br><br>你需要注意的是，密文中出现的字母都是大写字母。密文中也包括非字母的字符，对这些字符不用进行解码。</p>",
    "img": "",
    "inputTip": "一行，给出密文，密文不为空，而且其中的字符数不超过200。",
    "inputStyle": "输入",
    "outputTip": "输出",
    "outputStyle": "输出一行，即密文对应的明文。",
    "inputExample": "<pre>NS BFW, JAJSYX TK NRUTWYFSHJ FWJ YMJ WJXZQY TK YWNANFQ HFZXJX</pre>",
    "outputExample": "<pre>IN WAR, EVENTS OF IMPORTANCE ARE THE RESULT OF TRIVIAL CAUSES</pre>",
    "tip": "翻译自 South Central USA 2002 的试题",
    "timeLimited": "1000ms",
    "spaceLimited": "65536kB"
  },
  {
    "id": "7915",
    "category": "1.7编程基础之字符串",
    "title": "11:潜伏者",
    "description": "<p>R国和S国正陷入战火之中，双方都互派间谍，潜入对方内部，伺机行动。</p><p>历经艰险后，潜伏于S国的R国间谍小C终于摸清了S国军用密码的编码规则：</p><p>1、    S国军方内部欲发送的原信息经过加密后在网络上发送，原信息的内容与加密后所的内容均由大写字母‘A’—‘Z’构成（无空格等其他字母）。</p><p>2、    S国对于每个字母规定了对应的“密字”。加密的过程就是将原信息中的所有字母替换为其对应的“密字”。</p><p>3、    每个字母只对应一个唯一的“密字”，不同的字母对应不同的“密字”。“密字”可以和原字母相同。</p><p>例如，若规定‘A’的密字为‘A’，‘B’的密字为‘C’（其他字母及密字略），则原信息“ABA”被加密为“ACA”。</p><p>现在，小C通过内线掌握了S国网络上发送的一条加密信息及其对应的原信息。小C希望能通过这条信息，破译S国的军用密码。小C的破译过程是这样的：扫描原信息，对于原信息中的字母x（代表任一大写字母），找到其在加密信息中的对应大写字母y，并认为在密码里y是x的密字。如此进行下去直到停止于如下的某个状态：</p><p>1、    所有信息扫描完毕，‘A’—‘Z’所有26个字母在原信息中均出现过并获得了相应的“密字”。</p><p>2、    所有信息扫描完毕，但发现存在某个（或某些）字母在原信息中没有出现。</p><p>3、    扫描中发现掌握的信息里有明显的自相矛盾或错误（违反S过密码的编码规则）。例如某条信息“XYZ”被翻译为“ABA”就违反了“不同字母对应不同密字”的规则。</p><p>在小C忙得头昏脑胀之际，R国司令部又发来电报，要求他翻译另外一条从S国刚刚截取到的加密信息。现在请你帮助小C：通过内线掌握的信息，尝试破译密码。然后利用破译的密码，翻译电报中的加密信息。\n</p>",
    "img": "",
    "inputTip": "共3行，每行为一个长度在1到100之间的字符串。第1行为小C掌握的一条加密信息。第2行为第1行的加密信息所对应的原信息。第3行为R国司令部要求小C翻译的加密信息。输入数据保证所有字符串仅由大写字母‘A’—‘Z’构成，且第1行长度与第2行相等。",
    "inputStyle": "输入",
    "outputTip": "输出",
    "outputStyle": "共1行。若破译密码停止时出现2，3两种情况，请你输出“Failed”（不含引号，注意首字母大写，其它小写）。否则请输出利用密码翻译电报中加密信息后得到的原信息。",
    "inputExample": "<pre>样例 #1：\nAA\nAB\nEOWIE\n\n样例 #2：\nQWERTYUIOPLKJHGFDSAZXCVBN\nABCDEFGHIJKLMNOPQRSTUVWXY\nDSLIEWO\n\n样例 #3：\nMSRTZCJKPFLQYVAWBINXUEDGHOOILSMIJFRCOPPQCEUNYDUMPP\nYIZSDWAHLNOVFUCERKJXQMGTBPPKOIYKANZWPLLVWMQJFGQYLL\nFLSO</pre>",
    "outputExample": "<pre>样例 #1：\nFailed\n\n样例#2：\nFailed\n\n样例#3：\nNOIP\n</pre>",
    "tip": "输入输出样例1说明：原信息中的字母‘A’和‘B’对应相同的密字，输出“Failed”。输入输出样例2说明：字母‘Z’在原信息中没有出现，输出“Failed”。",
    "timeLimited": "1000ms",
    "spaceLimited": "65536kB"
  },
  {
    "id": "8169",
    "category": "1.7编程基础之字符串",
    "title": "12:加密的病历单",
    "description": "<p><span style=\"font-family: 'Times New Roman';font-size: 14.6666669845581px;background-color: rgb(255, 255, 255)\">小英是药学专业大三的学生，暑假期间获得了去医院药房实习的机会。 </span><br style=\"font-family: 'Times New Roman'; font-size: 14.6666669845581px; line-height: 22px; white-space: normal;\"><span style=\"font-family: 'Times New Roman';font-size: 14.6666669845581px;background-color: rgb(255, 255, 255)\">在药房实习期间，小英扎实的专业基础获得了医生的一致好评，得知小英在计算概论中取得过好成绩后，主任又额外交给她一项任务，解密抗战时期被加密过的一些伤员的名单。 </span><br style=\"font-family: 'Times New Roman'; font-size: 14.6666669845581px; line-height: 22px; white-space: normal;\"><span style=\"font-family: 'Times New Roman';font-size: 14.6666669845581px;background-color: rgb(255, 255, 255)\">经过研究，小英发现了如下加密规律（括号中是一个“原文 -> 密文”的例子） </span><br style=\"font-family: 'Times New Roman'; font-size: 14.6666669845581px; line-height: 22px; white-space: normal;\"><span style=\"font-family: 'Times New Roman';font-size: 14.6666669845581px;background-color: rgb(255, 255, 255)\">1.  原文中所有的字符都在字母表中被循环左移了三个位置（dec  -> abz） </span><br style=\"font-family: 'Times New Roman'; font-size: 14.6666669845581px; line-height: 22px; white-space: normal;\"><span style=\"font-family: 'Times New Roman';font-size: 14.6666669845581px;background-color: rgb(255, 255, 255)\">2.  逆序存储（abcd -> dcba ） </span><br style=\"font-family: 'Times New Roman'; font-size: 14.6666669845581px; line-height: 22px; white-space: normal;\"><span style=\"font-family: 'Times New Roman';font-size: 14.6666669845581px;background-color: rgb(255, 255, 255)\">3.  大小写反转（abXY -> ABxy） </span><br></p>",
    "img": "",
    "inputTip": "一个加密的字符串。（长度小于50且只包含大小写字母）",
    "inputStyle": "输入",
    "outputTip": "输出",
    "outputStyle": "输出解密后的字符串。",
    "inputExample": "<pre>GSOOWFASOq</pre>",
    "outputExample": "<pre>Trvdizrrvj</pre>",
    "tip": "医学部计算概论2011年期末考试（王志钢）改编",
    "timeLimited": "1000ms",
    "spaceLimited": "65536kB"
  },
  {
    "id": "8175",
    "category": "1.7编程基础之字符串",
    "title": "13:将字符串中的小写字母转换成大写字母",
    "description": "<p><span style=\"font-family: 'Times New Roman';font-size: 14.6666669845581px;background-color: rgb(255, 255, 255)\">给定一个字符串，将其中所有的小写字母转换成大写字母。</span><br></p>",
    "img": "",
    "inputTip": "输入一行，包含一个字符串（长度不超过100，可能包含空格）。",
    "inputStyle": "输入",
    "outputTip": "输出",
    "outputStyle": "输出转换后的字符串。",
    "inputExample": "<pre>helloworld123Ha</pre>",
    "outputExample": "<pre>HELLOWORLD123HA</pre>",
    "tip": "",
    "timeLimited": "1000ms",
    "spaceLimited": "65536kB"
  },
  {
    "id": "1691",
    "category": "1.7编程基础之字符串",
    "title": "14:大小写字母互换",
    "description": "<p>把一个字符串中所有出现的大写字母都替换成小写字母，同时把小写字母替换成大写字母。</p>",
    "img": "",
    "inputTip": "输入一行：待互换的字符串。",
    "inputStyle": "输入",
    "outputTip": "输出",
    "outputStyle": "输出一行：完成互换的字符串（字符串长度小于80）。",
    "inputExample": "<pre>If so, you already have a Google Account. You can sign in on the right. </pre>",
    "outputExample": "<pre>iF SO, YOU ALREADY HAVE A gOOGLE aCCOUNT. yOU CAN SIGN IN ON THE RIGHT. </pre>",
    "tip": "计算概论05",
    "timeLimited": "1000ms",
    "spaceLimited": "65536kB"
  },
  {
    "id": "7550",
    "category": "1.7编程基础之字符串",
    "title": "15:整理药名",
    "description": "<p>医生在书写药品名的时候经常不注意大小写，格式比较混乱。现要求你写一个程序将医生书写混乱的药品名整理成统一规范的格式，即药品名的第一个字符如果是字母要大写，其他字母小写。如将ASPIRIN、aspirin整理成Aspirin。<br></p>",
    "img": "",
    "inputTip": "第一行一个数字n，表示有n个药品名要整理，n不超过100。接下来n行，每行一个单词，长度不超过20，表示医生手书的药品名。药品名由字母、数字和-组成。",
    "inputStyle": "输入",
    "outputTip": "输出",
    "outputStyle": "n行，每行一个单词，对应输入的药品名的规范写法。",
    "inputExample": "<pre>4\nAspiRin\ncisapride\n2-PENICILLIN\nCefradine-6</pre>",
    "outputExample": "<pre>Aspirin\nCisapride\n2-penicillin\nCefradine-6</pre>",
    "tip": "习题(7-8) 医学部 2010 期末试题 臧家瑞",
    "timeLimited": "1000ms",
    "spaceLimited": "65536kB"
  },
  {
    "id": "8174",
    "category": "1.7编程基础之字符串",
    "title": "16:忽略大小写的字符串比较",
    "description": "<p><span style=\"font-family: 'Times New Roman';font-size: 14.6666669845581px;background-color: rgb(255, 255, 255)\">一般我们用strcmp可比较两个字符串的大小，比较方法为对两个字符串从前往后逐个字符相比较（按ASCII码值大小比较），直到出现不同的字符或遇到'\\0'为止。如果全部字符都相同，则认为相同；如果出现不相同的字符，则以第一个不相同的字符的比较结果为准（注意：如果某个字符串遇到'\\0'而另一个字符串还未遇到'\\0'，则前者小于后者）。但在有些时候，我们比较字符串的大小时，希望忽略字母的大小，例如\"Hello\"和\"hello\"在忽略字母大小写时是相等的。请写一个程序，实现对两个字符串进行忽略字母大小写的大小比较。</span><br></p>",
    "img": "",
    "inputTip": "输入为两行，每行一个字符串，共两个字符串。（每个字符串长度都小于80）",
    "inputStyle": "输入",
    "outputTip": "输出",
    "outputStyle": "如果第一个字符串比第二个字符串小，输出一个字符\"<\"；如果第一个字符串比第二个字符串大，输出一个字符\">\"；如果两个字符串相等，输出一个字符\"=\"。",
    "inputExample": "<pre>Hello, how are you?\nhello, How are you?</pre>",
    "outputExample": "<pre>=</pre>",
    "tip": "计算概论05",
    "timeLimited": "1000ms",
    "spaceLimited": "65536kB"
  },
  {
    "id": "1745",
    "category": "1.7编程基础之字符串",
    "title": "17:字符串判等",
    "description": "<p>判断两个由大小写字母和空格组成的字符串在忽略大小写，且忽略空格后是否相等。</p>",
    "img": "",
    "inputTip": "两行，每行包含一个字符串。",
    "inputStyle": "输入",
    "outputTip": "输出",
    "outputStyle": "若两个字符串相等，输出YES，否则输出NO。",
    "inputExample": "<pre>a A bb BB ccc CCC\nAa BBbb CCCccc\n</pre>",
    "outputExample": "<pre>YES</pre>",
    "tip": "",
    "timeLimited": "1000ms",
    "spaceLimited": "65536kB"
  },
  {
    "id": "8176",
    "category": "1.7编程基础之字符串",
    "title": "18:验证子串",
    "description": "<p><span style=\"font-family: 'Times New Roman';font-size: 14.6666669845581px;background-color: rgb(255, 255, 255)\">输入两个字符串，验证其中一个串是否为另一个串的子串。</span><br></p>",
    "img": "",
    "inputTip": "输入两个字符串， 每个字符串占一行，长度不超过200且不含空格。",
    "inputStyle": "输入",
    "outputTip": "输出",
    "outputStyle": "若第一个串s1是第二个串s2的子串，则输出(s1) is substring of (s2) 否则，若第二个串s2是第一个串s1的子串，输出(s2) is substring of (s1) 否则，输出 No substring。",
    "inputExample": "<pre>abc\ndddncabca</pre>",
    "outputExample": "<pre>abc is substring of dddncabca</pre>",
    "tip": "JerryCircle[Java 语言程序设计]",
    "timeLimited": "1000ms",
    "spaceLimited": "65536kB"
  },
  {
    "id": "2712",
    "category": "1.7编程基础之字符串",
    "title": "19:字符串移位包含问题",
    "description": "<p>对于一个字符串来说，定义一次循环移位操作为：将字符串的第一个字符移动到末尾形成新的字符串。</p><p>给定两个字符串s1和s2，要求判定其中一个字符串是否是另一字符串通过若干次循环移位后的新字符串的子串。例如CDAA是由AABCD两次移位后产生的新串BCDAA的子串，而ABCD与ACBD则不能通过多次移位来得到其中一个字符串是新串的子串。</p>",
    "img": "",
    "inputTip": "一行，包含两个字符串，中间由单个空格隔开。字符串只包含字母和数字，长度不超过30。",
    "inputStyle": "输入",
    "outputTip": "输出",
    "outputStyle": "如果一个字符串是另一字符串通过若干次循环移位产生的新串的子串，则输出true，否则输出false。",
    "inputExample": "<pre>AABCD CDAA</pre>",
    "outputExample": "<pre>true</pre>",
    "tip": "",
    "timeLimited": "1000ms",
    "spaceLimited": "65536kB"
  },
  {
    "id": "8177",
    "category": "1.7编程基础之字符串",
    "title": "20:删除单词后缀",
    "description": "<p><span style=\"font-family: 'Times New Roman';font-size: 14.6666669845581px;background-color: rgb(255, 255, 255)\">给定一个单词，如果该单词以er、ly或者ing后缀结尾， 则删除该后缀<span style=\"font-family: 'Times New Roman';font-size: 14.6666669845581px;background-color: rgb(255, 255, 255)\">（题目保证删除后缀后的单词长度不为0）</span>， 否则不进行任何操作。</span><br></p>",
    "img": "",
    "inputTip": "输入一行，包含一个单词（单词中间没有空格，每个单词最大长度为32）。",
    "inputStyle": "输入",
    "outputTip": "输出",
    "outputStyle": "输出按照题目要求处理后的单词。",
    "inputExample": "<pre>referer\n</pre>",
    "outputExample": "<pre>refer</pre>",
    "tip": "北京大学医学部计算概论08期末考试题",
    "timeLimited": "1000ms",
    "spaceLimited": "65536kB"
  },
  {
    "id": "1946",
    "category": "1.7编程基础之字符串",
    "title": "21:单词替换",
    "description": "<p>输入一个字符串，以回车结束（字符串长度<=100）。该字符串由若干个单词组成，单词之间用一个空格隔开，所有单词区分大小写。现需要将其中的某个单词替换成另一个单词，并输出替换之后的字符串。<!--=100）。该字符串由若干个单词组成，单词之间用一个空格隔开，所有单词区分大小写。现需要将其中的某个单词替换成另一个单词，并输出替换之后的字符串。<--></p>",
    "img": "",
    "inputTip": "输入包括3行，第1行是包含多个单词的字符串 s;第2行是待替换的单词a(长度 <= 100);第3行是a将被替换的单词b(长度 <= 100).s, a, b 最前面和最后面都没有空格.",
    "inputStyle": "输入",
    "outputTip": "输出",
    "outputStyle": "输出只有 1 行，将s中所有单词a替换成b之后的字符串。",
    "inputExample": "<pre>You want someone to help you\nYou\nI\n</pre>",
    "outputExample": "<pre>I want someone to help you\n</pre>",
    "tip": "医学部计算概论2006期末考试题",
    "timeLimited": "1000ms",
    "spaceLimited": "65536kB"
  },
  {
    "id": "8170",
    "category": "1.7编程基础之字符串",
    "title": "22:紧急措施",
    "description": "<p><span style=\"font-family: 'Times New Roman';font-size: 14.6666669845581px;background-color: rgb(255, 255, 255)\">近日，一些热门网站遭受黑客入侵，这些网站的账号、密码及email的数据惨遭泄露。你在这些网站上注册若干账号（使用的用户名不一定相同），但是注册时使用了相同的email。你此时拿到了那份泄露的数据，希望尽快将自己的密码更改。策略如下：根据email找到你的用户名和密码，然后更改密码。更改的规则为：小写和大写交换，非字母字符保持不变。</span><br></p>",
    "img": "",
    "inputTip": "第一行为你的email地址，长度不超过50个字符且只包含字母、数字和‘@’符号。第二行为账号数N，N(0 < N < 10000)。接下来N行，每行表示一个账号，格式为：用户名 密码 email它们之间用单个空格分开。用户名、密码、email均不含空格，且长度不超过50个字符。",
    "inputStyle": "输入",
    "outputTip": "输出",
    "outputStyle": "有若干行，每行为你的一个账号，包括：你的账号，修改后的密码（之间用单个空格分隔）。如果没有你的账号，则输出empty。",
    "inputExample": "<pre>样例输入1：\nabc@pku.edu.cn\n5\nhelloKitty iLoveCats abc@pku.edu.cn\n2012 maya2012 cplusplus@exam.com\nKittyCat 5iKitty abc@pku.edu.cn\nprogram password teacher@exam.com\nwhoAmi Feb.29$ abc@pku.edu.cn\n\n样例输入2：\nabc@pku.edu.cn\n1\n2012 maya2012 cplusplus@exam.com</pre>",
    "outputExample": "<pre>样例输出1：\nhelloKitty IlOVEcATS\nKittyCat 5IkITTY\nwhoAmi fEB.29$\n\n样例输出2：\nempty</pre>",
    "tip": "医学部计算概论2011年期末考试（谢佳亮）",
    "timeLimited": "1000ms",
    "spaceLimited": "65536kB"
  },
  {
    "id": "6247",
    "category": "1.7编程基础之字符串",
    "title": "23:过滤多余的空格",
    "description": "<p>一个句子中也许有多个连续空格，过滤掉多余的空格，只留下一个空格。<br></p>",
    "img": "",
    "inputTip": "一行，一个字符串（长度不超过200），句子的头和尾都没有空格。",
    "inputStyle": "输入",
    "outputTip": "输出",
    "outputStyle": "过滤之后的句子。",
    "inputExample": "<pre>Hello      world.This is    c language.</pre>",
    "outputExample": "<pre>Hello world.This is c language.</pre>",
    "tip": "",
    "timeLimited": "1000ms",
    "spaceLimited": "65536kB"
  },
  {
    "id": "7549",
    "category": "1.7编程基础之字符串",
    "title": "24:单词的长度",
    "description": "<p>输入一行单词序列，相邻单词之间由1个或多个空格间隔，请对应地计算各个单词的长度。\n<br><br>注意，如果有标点符号（如连字符，逗号），标点符号算作与之相连的词的一部分。没有被空格间开的符号串，都算作单词。<br></p>",
    "img": "",
    "inputTip": "一行单词序列，最少1个单词，最多300个单词，单词之间用至少1个空格间隔。单词序列总长度不超过1000。",
    "inputStyle": "输入",
    "outputTip": "输出",
    "outputStyle": "依次输出对应单词的长度，之间以逗号间隔。",
    "inputExample": "<pre>She was born in 1990-01-02  and  from Beijing city.</pre>",
    "outputExample": "<pre>3,3,4,2,10,3,4,7,5</pre>",
    "tip": "习题(7-7)  元培-From WHF",
    "timeLimited": "1000ms",
    "spaceLimited": "65536kB"
  },
  {
    "id": "7600",
    "category": "1.7编程基础之字符串",
    "title": "25:最长最短单词",
    "description": "<p>输入1行句子（不多于200个单词，每个单词长度不超过100），只包含字母、空格和逗号。单词由至少一个连续的字母构成，空格和逗号都是单词间的间隔。</p><p>试输出第1个最长的单词和第1个最短单词。\n<br></p>",
    "img": "",
    "inputTip": "一行句子。",
    "inputStyle": "输入",
    "outputTip": "输出",
    "outputStyle": "两行输出：第1行，第一个最长的单词。第2行，第一个最短的单词。",
    "inputExample": "<pre>I am studying Programming language C in Peking University</pre>",
    "outputExample": "<pre>Programming\nI</pre>",
    "tip": "如果所有单词长度相同，那么第一个单词既是最长单词也是最短单词。",
    "timeLimited": "1000ms",
    "spaceLimited": "65536kB"
  },
  {
    "id": "6250",
    "category": "1.7编程基础之字符串",
    "title": "26:字符串最大跨距",
    "description": "<p>有三个字符串S,S1,S2，其中，S长度不超过300，S1和S2的长度不超过10。想检测S1和S2是否同时在S中出现，且S1位于S2的左边，并在S中互不交叉（即，S1的右边界点在S2的左边界点的左侧）。计算满足上述条件的最大跨距（即，最大间隔距离：最右边的S2的起始点与最左边的S1的终止点之间的字符数目）。如果没有满足条件的S1，S2存在，则输出-1。 <br><br>例如，S = \"abcd123ab888efghij45ef67kl\", S1=\"ab\", S2=\"ef\"，其中，S1在S中出现了2次，S2也在S中出现了2次，最大跨距为：18。<br></p>",
    "img": "",
    "inputTip": "三个串：S1, S2, S3，其间以逗号间隔（注意，S1, S2, S3中均不含逗号和空格）；",
    "inputStyle": "输入",
    "outputTip": "输出",
    "outputStyle": "S1和S2在S最大跨距；若在S中没有满足条件的S1和S2，则输出-1。",
    "inputExample": "<pre>abcd123ab888efghij45ef67kl,ab,ef</pre>",
    "outputExample": "<pre>18</pre>",
    "tip": "",
    "timeLimited": "1000ms",
    "spaceLimited": "65536kB"
  },
  {
    "id": "6255",
    "category": "1.7编程基础之字符串",
    "title": "27:单词翻转",
    "description": "<p>输入一个句子（一行），将句子中的每一个单词翻转后输出。<br></p>",
    "img": "",
    "inputTip": "只有一行，为一个字符串，不超过500个字符。单词之间以空格隔开。",
    "inputStyle": "输入",
    "outputTip": "输出",
    "outputStyle": "翻转每一个单词后的字符串，单词之间的空格需与原文一致。",
    "inputExample": "<pre>hello world</pre>",
    "outputExample": "<pre>olleh dlrow</pre>",
    "tip": "",
    "timeLimited": "1000ms",
    "spaceLimited": "65536kB"
  },
  {
    "id": "6246",
    "category": "1.7编程基础之字符串",
    "title": "28:单词倒排",
    "description": "<p>编写程序，读入一行英文(只包含字母和空格，<span style=\"white-space: normal;\">单词间以单个</span><span style=\"white-space: normal;\">空格分隔</span>)，将所有单词的顺序倒排并输出，依然以单个空格分隔。<br></p>",
    "img": "",
    "inputTip": "输入为一个字符串（字符串长度至多为100）。",
    "inputStyle": "输入",
    "outputTip": "输出",
    "outputStyle": "输出为按要求排序后的字符串。",
    "inputExample": "<pre>I am a student</pre>",
    "outputExample": "<pre>student a am I</pre>",
    "tip": "",
    "timeLimited": "1000ms",
    "spaceLimited": "65536kB"
  },
  {
    "id": "7911",
    "category": "1.7编程基础之字符串",
    "title": "29:ISBN号码",
    "description": "<p>每一本正式出版的图书都有一个ISBN号码与之对应，ISBN码包括9位数字、1位识别码和3位分隔符，其规定格式如“x-xxx-xxxxx-x”，其中符号“-”是分隔符（键盘上的减号），最后一位是识别码，例如0-670-82162-4就是一个标准的ISBN码。ISBN码的首位数字表示书籍的出版语言，例如0代表英语；第一个分隔符“-”之后的三位数字代表出版社，例如670代表维京出版社；第二个分隔之后的五位数字代表该书在出版社的编号；最后一位为识别码。</p><p>识别码的计算方法如下：</p><p>首位数字乘以1加上次位数字乘以2……以此类推，用所得的结果mod 11，所得的余数即为识别码，如果余数为10，则识别码为大写字母X。例如ISBN号码0-670-82162-4中的识别码4是这样得到的：对067082162这9个数字，从左至右，分别乘以1，2，…，9，再求和，即0×1+6×2+„„+2×9=158，然后取158 mod 11的结果4作为识别码。</p><p>你的任务是编写程序判断输入的ISBN号码中识别码是否正确，如果正确，则仅输出“Right”；如果错误，则输出你认为是正确的ISBN号码。\n</p>",
    "img": "",
    "inputTip": "只有一行，是一个字符序列，表示一本书的ISBN号码（保证输入符合ISBN号码的格式要求）。",
    "inputStyle": "输入",
    "outputTip": "输出",
    "outputStyle": "共一行，假如输入的ISBN号码的识别码正确，那么输出“Right”，否则，按照规定的格式，输出正确的ISBN号码（包括分隔符“-”）。",
    "inputExample": "<pre>样例 #1：\n0-670-82162-4\n\n样例 #2：\n0-670-82162-0</pre>",
    "outputExample": "<pre>样例 #1：\nRight\n\n样例 #2：\n0-670-82162-4</pre>",
    "tip": "NOIP2008复赛 普及组 第一题",
    "timeLimited": "1000ms",
    "spaceLimited": "65536kB"
  },
  {
    "id": "2755",
    "category": "1.7编程基础之字符串",
    "title": "30:字符环",
    "description": "<p>有两个由字符构成的环。请写一个程序，计算这两个字符环上最长连续公共字符串的长度。例如，字符串“ABCEFAGADEGKABUVKLM”的首尾连在一起，构成一个环；字符串“MADJKLUVKL”的首尾连在一起，构成一个另一个环；“UVKLMA”是这两个环的一个连续公共字符串。</p>",
    "img": "",
    "inputTip": "一行，包含两个字符串，分别对应一个字符环。这两个字符串之间用单个空格分开。字符串长度不超过255，且不包含空格等空白符。",
    "inputStyle": "输入",
    "outputTip": "输出",
    "outputStyle": "输出一个整数，表示这两个字符环上最长公共字符串的长度。",
    "inputExample": "<pre>ABCEFAGADEGKABUVKLM MADJKLUVKL\n</pre>",
    "outputExample": "<pre>6\n</pre>",
    "tip": "",
    "timeLimited": "1000ms",
    "spaceLimited": "65536kB"
  },
  {
    "id": "6680",
    "category": "1.7编程基础之字符串",
    "title": "31:字符串p型编码",
    "description": "<p>给定一个完全由数字字符（'0','1','2',…,'9'）构成的字符串str，请写出str的p型编码串。例如：字符串122344111可被描述为\"1个1、2个2、1个3、2个4、3个1\"，因此我们说122344111的p型编码串为1122132431；类似的道理，编码串101可以用来描述1111111111；00000000000可描述为\"11个0\"，因此它的p型编码串即为110；100200300可描述为\"1个1、2个\n0、1个2、2个0、1个3、2个0\"，因此它的p型编码串为112012201320。<br></p>",
    "img": "",
    "inputTip": "输入仅一行，包含字符串str。每一行字符串最多包含1000个数字字符。",
    "inputStyle": "输入",
    "outputTip": "输出",
    "outputStyle": "输出该字符串对应的p型编码串。",
    "inputExample": "<pre>122344111\n</pre>",
    "outputExample": "<pre>1122132431\n</pre>",
    "tip": "",
    "timeLimited": "1000ms",
    "spaceLimited": "65536kB"
  },
  {
    "id": "7602",
    "category": "1.7编程基础之字符串",
    "title": "32:行程长度编码",
    "description": "<p>在数据压缩中，一个常用的途径是行程长度压缩。对于一个待压缩的字符串而言，我们可以依次记录每个字符及重复的次数。这种压缩，对于相邻数据重复较多的情况比较有效。\n例如，如果待压缩串为\"AAABBBBCBB\"，则压缩的结果是(A,3)(B,4)(C,1)(B,2)。当然，如果相邻字符重复情况较少，则压缩效率就较低。 </p><p>现要求根据输入的字符串，得到大小写不敏感压缩后的结果（即所有小写字母均视为相应的大写字母）。<br></p>",
    "img": "",
    "inputTip": "一个字符串，长度大于0，且不超过1000，全部由大写或小写字母组成。",
    "inputStyle": "输入",
    "outputTip": "输出",
    "outputStyle": "输出为一行，表示压缩结果，形式为：(A,3)(B,4)(C,1)(B,2)即每对括号内部分别为字符（都为大写）及重复出现的次数，不含任何空格。",
    "inputExample": "<pre>aAABBbBCCCaaaaa</pre>",
    "outputExample": "<pre>(A,3)(B,4)(C,3)(A,5)</pre>",
    "tip": "习题(12-5)",
    "timeLimited": "1000ms",
    "spaceLimited": "65536kB"
  },
  {
    "id": "8178",
    "category": "1.7编程基础之字符串",
    "title": "33:判断字符串是否为回文",
    "description": "<p><span style=\"font-family: 'Times New Roman';font-size: 14.6666669845581px;background-color: rgb(255, 255, 255)\">输入一个字符串，输出该字符串是否回文。</span><span style=\"font-family: 'Times New Roman';font-size: 14.6666669845581px;background-color: rgb(255, 255, 255)\">回文是指顺读和倒读都一样的字符串。</span><br></p>",
    "img": "",
    "inputTip": "输入为一行字符串（字符串中没有空白字符，字符串长度不超过100）。",
    "inputStyle": "输入",
    "outputTip": "输出",
    "outputStyle": "如果字符串是回文，输出yes；否则，输出no。",
    "inputExample": "<pre>abcdedcba</pre>",
    "outputExample": "<pre>yes</pre>",
    "tip": "",
    "timeLimited": "1000ms",
    "spaceLimited": "65536kB"
  },
  {
    "id": "7603",
    "category": "1.7编程基础之字符串",
    "title": "34:回文子串",
    "description": "<p>给定一个字符串，输出所有长度至少为2的回文子串。 </p><p>回文子串即从左往右输出和从右往左输出结果是一样的字符串，比如：abba，cccdeedccc都是回文字符串。<br></p>",
    "img": "",
    "inputTip": "一个字符串，由字母或数字组成。长度500以内。",
    "inputStyle": "输入",
    "outputTip": "输出",
    "outputStyle": "输出所有的回文子串，每个子串一行。子串长度小的优先输出，若长度相等，则出现位置靠左的优先输出。",
    "inputExample": "<pre>123321125775165561</pre>",
    "outputExample": "<pre>33\n11\n77\n55\n2332\n2112\n5775\n6556\n123321\n165561</pre>",
    "tip": "习题(12-6)",
    "timeLimited": "1000ms",
    "spaceLimited": "65536kB"
  },
  {
    "id": "7910",
    "category": "1.7编程基础之字符串",
    "title": "35:字符串的展开",
    "description": "<p>在初赛普及组的“阅读程序写结果”的问题中，我们曾给出一个字符串展开的例子：如果在输入的字符串中，含有类似于“d-h”或者“4-8”的字串，我们就把它当作一种简写，输出时，用连续递增的字母获数字串替代其中的减号，即，将上面两个子串分别输出为“defgh”和“45678”。在本题中，我们通过增加一些参数的设置，使字符串的展开更为灵活。具体约定如下：</p><p>(1) 遇到下面的情况需要做字符串的展开：在输入的字符串中，出现了减号“-”，减号两侧同为小写字母或同为数字，且按照ASCII码的顺序，减号右边的字符严格大于左边的字符。</p><p>(2) 参数p1：展开方式。p1=1时，对于字母子串，填充小写字母；p1=2时，对于字母子串，填充大写字母。这两种情况下数字子串的填充方式相同。p1=3时，不论是字母子串还是数字字串，都用与要填充的字母个数相同的星号“*”来填充。</p><p>(3) 参数p2：填充字符的重复个数。p2=k表示同一个字符要连续填充k个。例如，当p2=3时，子串“d-h”应扩展为“deeefffgggh”。减号两边的字符不变。</p><p>(4) 参数p3：是否改为逆序：p3=1表示维持原来顺序，p3=2表示采用逆序输出，注意这时候仍然不包括减号两端的字符。例如当p1=1、p2=2、p3=2时，子串“d-h”应扩展为“dggffeeh”。</p><p>(5) 如果减号右边的字符恰好是左边字符的后继，只删除中间的减号，例如：“d-e”应输出为“de”，“3-4”应输出为“34”。如果减号右边的字符按照ASCII码的顺序小于或等于左边字符，输出时，要保留中间的减号，例如：“d-d”应输出为“d-d”，“3-1”应输出为“3-1”。\n</p>",
    "img": "",
    "inputTip": "包括两行：第1行为用空格隔开的3个正整数，一次表示参数p1，p2，p3。第2行为一行字符串，仅由数字、小写字母和减号“-”组成。行首和行末均无空格。40%的数据满足：字符串长度不超过5；100%的数据满足：1<=p1<=3，1<=p2<=8，1<=p3<=2。字符串长度不超过100。",
    "inputStyle": "输入",
    "outputTip": "输出",
    "outputStyle": "只有一行，为展开后的字符串。",
    "inputExample": "<pre>样例 #1：\n1 2 1\nabcs-w1234-9s-4zz\n\n样例 #2：\n2 3 2\na-d-d\n\n样例 #3：\n3 4 2\ndi-jkstra2-6\n</pre>",
    "outputExample": "<pre>样例 #1：\nabcsttuuvvw1234556677889s-4zz\n\n样例 #2：\naCCCBBBd-d\n\n样例 #3：\ndijkstra2************6</pre>",
    "tip": "NOIP2007复赛 提高组 第二题",
    "timeLimited": "1000ms",
    "spaceLimited": "65536kB"
  }
]