[
  {
    "id": "1712",
    "category": "1.13编程基础之综合应用",
    "title": "01:数制转换",
    "description": "<p>求任意两个不同进制非负整数的转换（2进制～16进制），所给整数在long所能表达的范围之内。<br>不同进制的表示符号为（0，1，...，9，a，b，...，f）或者（0，1，...，9，A，B，...，F）。</p>",
    "img": "",
    "inputTip": "输入只有一行，包含三个整数a，n，b。a表示其后的n 是a进制整数，b表示欲将a进制整数n转换成b进制整数。a，b是十进制整数，2 =< a，b <= 16。",
    "inputStyle": "输入",
    "outputTip": "输出",
    "outputStyle": "输出包含一行，该行有一个整数为转换后的b进制数。输出时字母符号全部用大写表示，即（0，1，...，9，A，B，...，F）。",
    "inputExample": "<pre>15 Aab3 7</pre>",
    "outputExample": "<pre>210306</pre>",
    "tip": "2005~2006医学部计算概论期末考试",
    "timeLimited": "1000ms",
    "spaceLimited": "65536kB"
  },
  {
    "id": "1725",
    "category": "1.13编程基础之综合应用",
    "title": "02:不吉利日期",
    "description": "<p>在国外，每月的13号和每周的星期5都是不吉利的。特别是当13号那天恰好是星期5时，更不吉利。已知某年的一月一日是星期w，并且这一年一定不是闰年，求出这一年所有13号那天是星期5的月份，按从小到大的顺序输出月份数字。（w=1..7）</p>",
    "img": "",
    "inputTip": "输入有一行，即一月一日星期几（w）。（1 <= w <= 7）",
    "inputStyle": "输入",
    "outputTip": "输出",
    "outputStyle": "输出有一到多行，每行一个月份，表示该月的13日是星期五。",
    "inputExample": "<pre>7</pre>",
    "outputExample": "<pre>1\n10</pre>",
    "tip": "1、3、5、7、8、10、12月各有31天4、6、9、11月各有30天2月有28天",
    "timeLimited": "1000ms",
    "spaceLimited": "65536kB"
  },
  {
    "id": "1767",
    "category": "1.13编程基础之综合应用",
    "title": "03:八进制小数",
    "description": "<p>八进制有限小数均可以用十进制有限小数精确地表示。比如，八进制里面的0.75等于十进制里面的0.963125 (7/8 + 5/64)。所有小数点后位数为n的八进制小数都可以表示成小数点后位数不多于3n的十进制小数。<br><br>你的任务是写一个程序，把(0,1)之间的八进制小数转化成十进制小数。</p>",
    "img": "",
    "inputTip": "一行，包含一个八进制小数。每个小数的形式是0.d1d2d3 ... dk，这里di是八进制数0...7，dk不等于0，而且已知0 < k < 15。",
    "inputStyle": "输入",
    "outputTip": "输出",
    "outputStyle": "输入如下形式的一行0.d1d2d3...dk [8] = 0.D1D2D3...Dm [10]这里左边是输入的八进制小数，右边是相等的十进制小数。输出的小数末尾不能有0，也就是说Dm不等于0。注意空格位置。",
    "inputExample": "<pre>0.75</pre>",
    "outputExample": "<pre>0.75 [8] = 0.953125 [10]</pre>",
    "tip": "翻译自 Southern African 2001 的试题",
    "timeLimited": "1000ms",
    "spaceLimited": "65536kB"
  },
  {
    "id": "1802",
    "category": "1.13编程基础之综合应用",
    "title": "04:垂直直方图",
    "description": "<p>输入4行全部由大写字母组成的文本，输出一个垂直直方图，给出每个字符出现的次数。注意：只用输出字符的出现次数，不用输出空白字符，数字或者标点符号的输出次数。</p>",
    "img": "",
    "inputTip": "输入包括4行由大写字母组成的文本，每行上字符的数目不超过80个。",
    "inputStyle": "输入",
    "outputTip": "输出",
    "outputStyle": "输出包括若干行。其中最后一行给出26个大写英文字母，这些字母之间用一个空格隔开。前面的几行包括空格和星号，每个字母出现几次，就在这个字母的上方输出一个星号。注意：输出的第一行不能是空行。",
    "inputExample": "<pre>THE QUICK BROWN FOX JUMPED OVER THE LAZY DOG.\nTHIS IS AN EXAMPLE TO TEST FOR YOUR\nHISTOGRAM PROGRAM.\nHELLO!\n</pre>",
    "outputExample": "<pre>                            *\n                            *\n        *                   *\n        *                   *     *   *\n        *                   *     *   *\n*       *     *             *     *   *\n*       *     * *     * *   *     * * *\n*       *   * * *     * *   * *   * * * *\n*     * * * * * *     * * * * *   * * * *     * *\n* * * * * * * * * * * * * * * * * * * * * * * * * *\nA B C D E F G H I J K L M N O P Q R S T U V W X Y Z\n</pre>",
    "tip": "翻译自USACO 2003 February Orange的试题。",
    "timeLimited": "1000ms",
    "spaceLimited": "65536kB"
  },
  {
    "id": "1930",
    "category": "1.13编程基础之综合应用",
    "title": "05:素数回文数的个数",
    "description": "<p>求11到n之间（包括n），既是素数又是回文数的整数有多少个。</p>",
    "img": "",
    "inputTip": "一个大于11小于1000的整数n。",
    "inputStyle": "输入",
    "outputTip": "输出",
    "outputStyle": "11到n之间的素数回文数个数。",
    "inputExample": "<pre>23</pre>",
    "outputExample": "<pre>1</pre>",
    "tip": "回文数指左右对称的数，如：292，333。",
    "timeLimited": "1000ms",
    "spaceLimited": "65536kB"
  },
  {
    "id": "1953",
    "category": "1.13编程基础之综合应用",
    "title": "06:循环数",
    "description": "<p>若一个n位的数字串满足下述条件，则称其是循环数（cyclic）：将这个数字串视为整数（可能带有前导0），并用任意一个 1 到 n 之间（包含1和n）的整数去乘它时, 会得到一个将原数字串首尾相接后，再在某处断开而得到的新数字串所对应的整数。例如，数字 142857 是循环数，因为: <br>142857 *1 = 142857 <br>142857 *2 = 285714 <br>142857 *3 = 428571 <br>142857 *4 = 571428 <br>142857 *5 = 714285 <br>142857 *6 = 857142。</p><p>请写一个程序判断给定的数是否是循环数。</p><p>注意：在此题中，输入数字串允许带前导0，且前导0不能被忽略，例如“01”是两位数字串，而“1”是一位数字串。但将数字串转化为整数做乘法运算或比较运算时，可以忽略前导0。</p>",
    "img": "",
    "inputTip": "一行，一个长度在 2 到 60 位之间的数字串。",
    "inputStyle": "输入",
    "outputTip": "输出",
    "outputStyle": "一个整数，若输入的数字串是循环数，输出1，否则输出0。",
    "inputExample": "<pre>142857\n\n\n</pre>",
    "outputExample": "<pre>1\n\n</pre>",
    "tip": "1047",
    "timeLimited": "1000ms",
    "spaceLimited": "65536kB"
  },
  {
    "id": "1966",
    "category": "1.13编程基础之综合应用",
    "title": "07:玛雅历",
    "description": "<p>上周末，M.A. Ya教授对古老的玛雅有了一个重大发现。从一个古老的节绳（玛雅人用于记事的工具）中，教授发现玛雅人使用了一个一年有365天的叫做Haab的历法。这个Haab历法拥有19个月，在开始的18个月，一个月有20天，月份的名字分别是pop, no, zip, zotz, tzec, xul, yoxkin, mol, chen, yax, zac, ceh, mac, kankin, muan, pax, koyab, cumhu。这些月份中的日期用0到19表示。Haab历的最后一个月叫做uayet，它只有5天，用0到4表示。玛雅人认为这个日期最少的月份是不吉利的，在这个月法庭不开庭，人们不从事交易，甚至没有人打扫屋中的地板。 <br><br>    因为宗教的原因，玛雅人还使用了另一个历法，在这个历法中年被称为Tzolkin(holly年)，一年被分成13个不同的时期，每个时期有20天，每一天用一个数字和一个单词相组合的形式来表示。使用的数字是1~13，使用的单词共有20个，它们分别是：imix, ik, akbal, kan, chicchan, cimi, manik, lamat, muluk, ok, chuen, eb, ben, ix, mem, cib, caban, eznab, canac, ahau。注意：年中的每一天都有着明确唯一的描述，比如，在一年的开始，日期如下描述： 1 imix, 2 ik, 3 akbal, 4 kan, 5 chicchan, 6 cimi, 7 manik, 8 lamat, 9 muluk, 10 ok, 11 chuen, 12 eb, 13 ben, 1 ix, 2 mem, 3 cib, 4 caban, 5 eznab, 6 canac, 7 ahau, ，8 imix, 9 ik, 10 akbal ……也就是说数字和单词各自独立循环使用。 <br><br>Haab历和Tzolkin历中的年都用数字0，1，……表示，数字0表示世界的开始。所以第一天被表示成： <br>Haab: 0. pop 0 <br>Tzolkin: 1 imix 0 <br>请帮助M.A. Ya教授写一个程序可以把Haab历转化成Tzolkin历。 <br></p>",
    "img": "",
    "inputTip": "Haab历中的数据由如下的方式表示： 日期. 月份 年数 输入中的第一行表示要转化的Haab历日期的数据量。下面的每一行表示一个日期，年数小于5000。",
    "inputStyle": "输入",
    "outputTip": "输出",
    "outputStyle": "Tzolkin历中的数据由如下的方式表示： 天数字 天名称 年数 第一行表示输出的日期数量。下面的每一行表示一个输入数据中对应的Tzolkin历中的日期。",
    "inputExample": "<pre>3\n10. zac 0\n0. pop 0\n10. zac 1995\n</pre>",
    "outputExample": "<pre>3\n3 chuen 0\n1 imix 0\n9 cimi 2801\n</pre>",
    "tip": "POJ 1008",
    "timeLimited": "1000ms",
    "spaceLimited": "65536kB"
  },
  {
    "id": "1968",
    "category": "1.13编程基础之综合应用",
    "title": "08:特殊日历计算",
    "description": "有一种特殊的日历法，它的一天和我们现在用的日历法的一天是一样长的。它每天有10个小时，每个小时有100分钟，每分钟有100秒。10天算一周，10周算一个月，10个月算一年。现在要你编写一个程序，将我们常用的日历法的日期转换成这种特殊的日历表示法。这种日历法的时、分、秒是从0开始计数的。日、月从1开始计数，年从0开始计数。秒数为整数。假设 0:0:0 1.1.2000 等同于特殊日历法的 0:0:0 1.1.0。",
    "img": "",
    "inputTip": "第一行是一个正整数 N ,表明下面有 N 组输入。每组输入有一行，格式如下：hour:minute:second day.month.year表示常规的日期。日期总是合法的。2000 <= year <= 50000。 ",
    "inputStyle": "输入",
    "outputTip": "输出",
    "outputStyle": "每组输入要求输出一行。格式如下：mhour:mmin:msec mday.mmonth.myear 是输入日期的特殊日历表示方法。 ",
    "inputExample": "<pre>7\n0:0:0 1.1.2000\n10:10:10 1.3.2001\n0:12:13 1.3.2400\n23:59:59 31.12.2001\n0:0:1 20.7.7478\n0:20:20 21.7.7478\n15:54:44 2.10.20749\n</pre>",
    "outputExample": "<pre>0:0:0 1.1.0\n4:23:72 26.5.0\n0:8:48 58.2.146\n9:99:98 31.8.0\n0:0:1 100.10.2000\n0:14:12 1.1.2001\n6:63:0 7.3.6848</pre>",
    "tip": "2210",
    "timeLimited": "1000ms",
    "spaceLimited": "65536kB"
  },
  {
    "id": "1981",
    "category": "1.13编程基础之综合应用",
    "title": "09:大整数乘法",
    "description": "<p>求两个不超过200位的非负整数的积。</p>",
    "img": "",
    "inputTip": "有两行，每行是一个不超过200位的非负整数，没有多余的前导0。",
    "inputStyle": "输入",
    "outputTip": "输出",
    "outputStyle": "一行，即相乘后的结果。结果里不能有多余的前导0，即如果结果是342，那么就不能输出为0342。",
    "inputExample": "<pre>12345678900\n98765432100</pre>",
    "outputExample": "<pre>1219326311126352690000</pre>",
    "tip": "程序设计实习2007",
    "timeLimited": "1000ms",
    "spaceLimited": "65536kB"
  },
  {
    "id": "2178",
    "category": "1.13编程基础之综合应用",
    "title": "10:判决素数个数",
    "description": "<p>输入两个整数X和Y，输出两者之间的素数个数（包括X和Y）。</p>",
    "img": "",
    "inputTip": "两个整数X和Y（1 <= X,Y <= 105）。",
    "inputStyle": "输入",
    "outputTip": "输出",
    "outputStyle": "输出一个整数，表示X，Y之间的素数个数（包括X和Y）。",
    "inputExample": "<pre>1 100</pre>",
    "outputExample": "<pre>25</pre>",
    "tip": "",
    "timeLimited": "1000ms",
    "spaceLimited": "65536kB"
  },
  {
    "id": "2248",
    "category": "1.13编程基础之综合应用",
    "title": "11:回文素数",
    "description": "一个数如果从左往右读和从右往左读数字是相同的，则称这个数是回文数，如121，1221，15651都是回文数。给定位数n，找出所有既是回文数又是素数的n位十进制数。（注：不考虑超过整型数范围的情况）。",
    "img": "",
    "inputTip": "位数n,其中1<=n<=9。",
    "inputStyle": "输入",
    "outputTip": "输出",
    "outputStyle": "第一行输出满足条件的素数个数。第二行按照从小到大的顺序输出所有满足条件的素数，两个数之间用一个空格区分。",
    "inputExample": "<pre>1</pre>",
    "outputExample": "<pre>4\n2 3 5 7</pre>",
    "tip": "",
    "timeLimited": "5000ms",
    "spaceLimited": "65536kB"
  },
  {
    "id": "6180",
    "category": "1.13编程基础之综合应用",
    "title": "12:分数求和",
    "description": "<p>输入n个分数并对他们求和，并用最简形式表示。所谓最简形式是指：分子分母的最大公约数为1；若最终结果的分母为1，则直接用整数表示。</p><p>如：5/6、10/3均是最简形式，而3/6需要化简为1/2, 3/1需要化简为3。 </p><p>分子和分母均不为0，也不为负数。<br></p>",
    "img": "",
    "inputTip": "第一行是一个整数n，表示分数个数，1 <= n <= 10；接下来n行，每行一个分数，用\"p/q\"的形式表示，不含空格，p，q均不超过10。",
    "inputStyle": "输入",
    "outputTip": "输出",
    "outputStyle": "输出只有一行，即最终结果的最简形式。若为分数，用\"p/q\"的形式表示。",
    "inputExample": "<pre>2\n1/2\n1/3</pre>",
    "outputExample": "<pre>5/6</pre>",
    "tip": "",
    "timeLimited": "1000ms",
    "spaceLimited": "65536kB"
  },
  {
    "id": "6183",
    "category": "1.13编程基础之综合应用",
    "title": "13:人民币支付",
    "description": "<p>从键盘输入一指定金额（以元为单位，如345），然后输出支付该金额的各种面额的人民币数量，显示100元，50元，20元，10元，5元，1元各多少张，要求尽量使用大面额的钞票。<br></p>",
    "img": "",
    "inputTip": "一个小于1000的正整数。",
    "inputStyle": "输入",
    "outputTip": "输出",
    "outputStyle": "输出分行，每行显示一个整数，从上到下分别表示100元，50元，20元，10元，5元，1元人民币的张数",
    "inputExample": "<pre>735</pre>",
    "outputExample": "<pre>7\n0\n1\n1\n1\n0</pre>",
    "tip": "",
    "timeLimited": "1000ms",
    "spaceLimited": "65536kB"
  },
  {
    "id": "6185",
    "category": "1.13编程基础之综合应用",
    "title": "14:求满足条件的3位数",
    "description": "<p>编写程序，按从小到大的顺序寻找同时符合条件1和2的所有3位数，条件为：\n<br>1.该数为完全平方数\n<br>2.该数至少有2位数字相同\n<br>例如，100同时满足上面两个条件。<br></p>",
    "img": "",
    "inputTip": "输入一个数n，n的大小不超过实际满足条件的3位数的个数。",
    "inputStyle": "输入",
    "outputTip": "输出",
    "outputStyle": "输出为第n个满足条件的3位数(升序)",
    "inputExample": "<pre>1</pre>",
    "outputExample": "<pre>100</pre>",
    "tip": "",
    "timeLimited": "1000ms",
    "spaceLimited": "65536kB"
  },
  {
    "id": "6244",
    "category": "1.13编程基础之综合应用",
    "title": "15:求序列中的众数",
    "description": "<p>输入一个长度为N的整数序列 (不多于128个整数)，每个整数的范围在[-10<sup>52</sup>,10<sup>52</sup>]，计算这个序列的众数。\n<br><br>众数是指出现次数最多的那个数。\n<br><br>如果有多个数出现的次数都达到最多，则取在原序列最先出现的数为众数；如果所有的数都相等，则返回\"no\"。<br></p>",
    "img": "",
    "inputTip": "第一行为序列长度N。然后是N个数，每一个数的范围都是在[-10^52,10^52]。 注意，这N个数之间可能有若干个空行隔开。注意，输入数据可能有一些冗余表达信息，具体来说：1） 正数和0前面可能有前导0和'+'符号，例如+000123=123+0000=0-0000=02）每个数字中不含有空格和其他非数字字符，例如不会出现\"100 0\"或者\"- 100\"。3）每个数字前面至多有一个符号，即不会出现+(-1)、-(+4)和-(-1)等情况。",
    "inputStyle": "输入",
    "outputTip": "输出",
    "outputStyle": "输出只有 1 行：该序列的众数或者”no”。如果有多个数出现的次数都达到最多，则取最先出现的数为众数，并且输出形式应该最简形式。例如，如果原序列众数为+000123，则输出123；如果原序列众数为+0000或者-0000或者0000,输出0。负数正常输出，例如：如果原序列众数为-000000001111，就输出-1111。",
    "inputExample": "<pre>6\n-00001\n10000\n00011111111111111111111111111111111111\n-01\n+000000011111111111111111111111111111111111\n-00000000000001</pre>",
    "outputExample": "<pre>-1</pre>",
    "tip": "",
    "timeLimited": "1000ms",
    "spaceLimited": "65536kB"
  },
  {
    "id": "6248",
    "category": "1.13编程基础之综合应用",
    "title": "16:最长单词2",
    "description": "<p>一个以'.'结尾的简单英文句子，单词之间用空格分隔，没有缩写形式和其它特殊形式，求句子中的最长单词。<br></p>",
    "img": "",
    "inputTip": "一个以'.'结尾的简单英文句子（长度不超过500），单词之间用空格分隔，没有缩写形式和其它特殊形式。",
    "inputStyle": "输入",
    "outputTip": "输出",
    "outputStyle": "该句子中最长的单词。如果多于一个，则输出第一个",
    "inputExample": "<pre>I am a student of Peking University.</pre>",
    "outputExample": "<pre>University</pre>",
    "tip": "",
    "timeLimited": "1000ms",
    "spaceLimited": "65536kB"
  },
  {
    "id": "6374",
    "category": "1.13编程基础之综合应用",
    "title": "17:文字排版",
    "description": "<p>给一段英文短文，单词之间以空格分隔（每个单词包括其前后紧邻的标点符号）。请将短文重新排版，要求如下： </p><p>每行不超过80个字符；每个单词居于同一行上；在同一行的单词之间以一个空格分隔；行首和行尾都没有空格。<br></p>",
    "img": "",
    "inputTip": "第一行是一个整数n，表示英文短文中单词的数目. 其后是n个以空格分隔的英文单词（单词包括其前后紧邻的标点符号，且每个单词长度都不大于40个字母）。",
    "inputStyle": "输入",
    "outputTip": "输出",
    "outputStyle": "排版后的多行文本，每行文本字符数最多80个字符，单词之间以一个空格分隔，每行文本首尾都没有空格。",
    "inputExample": "<pre>84\nOne sweltering day, I was scooping ice cream into cones and told my four children they could \"buy\" a cone from me for a hug. Almost immediately, the kids lined up to make their purchases. The three youngest each gave me a quick hug, grabbed their cones and raced back outside. But when my teenage son at the end of the line finally got his turn to \"buy\" his ice cream, he gave me two hugs. \"Keep the changes,\" he said with a smile. </pre>",
    "outputExample": "<pre>One sweltering day, I was scooping ice cream into cones and told my four\nchildren they could \"buy\" a cone from me for a hug. Almost immediately, the kids\nlined up to make their purchases. The three youngest each gave me a quick hug,\ngrabbed their cones and raced back outside. But when my teenage son at the end\nof the line finally got his turn to \"buy\" his ice cream, he gave me two hugs.\n\"Keep the changes,\" he said with a smile.</pre>",
    "tip": "",
    "timeLimited": "1000ms",
    "spaceLimited": "65536kB"
  },
  {
    "id": "6600",
    "category": "1.13编程基础之综合应用",
    "title": "18:Tomorrow never knows？",
    "description": "<p>甲壳虫的《A day in the life》和《Tomorrow never knows》脍炙人口，如果告诉你a day in the life,真的会是tomorrow never knows?相信学了计概之后这个不会是难题，现在就来实现吧。 </p><p>读入一个格式为yyyy-mm-dd的日期（即年－月－日），输出这个日期下一天的日期。可以假定输入的日期不早于1600-01-01，也不晚于2999-12-30。<br></p>",
    "img": "",
    "inputTip": "输入仅一行，格式为yyyy-mm-dd的日期。",
    "inputStyle": "输入",
    "outputTip": "输出",
    "outputStyle": "输出也仅一行，格式为yyyy-mm-dd的日期",
    "inputExample": "<pre>2010-07-05</pre>",
    "outputExample": "<pre>2010-07-06</pre>",
    "tip": "闰年的标准：(1)普通年能被4整除且不能被100整除的为闰年。（如2004年就是闰年,1901年不是闰年）  地球公转示意图(2)世纪年能被400整除的是闰年。(如2000年是闰年，1100年不是闰年)输入语句scanf(\"%d-%d-%d\",&y,&m,&d)可以存储年，月，日．输出语句格式类似printf(\"%d-%02d-%02d\\n\",year,month,day)．",
    "timeLimited": "1000ms",
    "spaceLimited": "65536kB"
  },
  {
    "id": "6731",
    "category": "1.13编程基础之综合应用",
    "title": "19:啤酒厂选址",
    "description": "<p>海上有一个岛，在环海边上建有一条环岛高速公路，沿着公路有n（5 < n < 10000）个居民点，假设每个居民点有一个编号，从0开始，按顺时针依次从小到大（即，0,1，…，n-1）编号。在岛上啤酒很受青睐。某啤酒企业计划在岛上投资建一个啤酒厂，并根据啤酒需求每天向居住点送啤酒。已知两个相邻的居民点的距离以及每个居住点每天的啤酒需求量（假设每个居住点每天不超过2000桶）。假定每单位长度的路程送一桶啤酒需要的费用恒定（为单位费用）。请问，选择哪一个居民点建啤酒厂，才能使每天送啤酒的费用最小（空车不计费用）。<br></p>",
    "img": "",
    "inputTip": "第一行：为居民点数目n后面为n行，每行为一个居民点的啤酒需求量以及按顺时针离下一个居民点的距离（均为整数,空格间隔），从编号为0的开始，按单增顺次给出。注意：后面第n行对应于居民点（n-1)的啤酒需求量以及到编号为0的居民点距离。",
    "inputStyle": "输入",
    "outputTip": "输出",
    "outputStyle": "啤酒厂所在的居民点编号以及每天的运输费用，其间以逗号间隔",
    "inputExample": "<pre>6\n500 10\n300 30\n350 25\n400 60\n700 28\n200 35</pre>",
    "outputExample": "<pre>0,94100</pre>",
    "tip": "元培-From Whf",
    "timeLimited": "1000ms",
    "spaceLimited": "65536kB"
  },
  {
    "id": "6901",
    "category": "1.13编程基础之综合应用",
    "title": "20:话题焦点人物",
    "description": "<p>微博提供了一种便捷的交流平台。一条微博中，可以提及其它用户。例如Lee发出一条微博为：“期末考试顺利 @Kim \n@Neo”，则Lee提及了Kim和Neo两位用户。</p><p>我们收集了N(1 < N < \n10000)条微博，并已将其中的用户名提取出来，用小于等于100的正整数表示。</p><p>通过分析这些数据，我们希望发现大家的话题焦点人物，即被提及最多的人（题目保证这样的人有且只有一个），并找出那些提及它的人。<br></p>",
    "img": "",
    "inputTip": "输入共两部分：第一部分是微博数量N，1 < N < 10000。第二部分是N条微博，每条微博占一行，表示为：发送者序号a，提及人数k(0 < = k < = 20)，然后是k个被提及者序号b1,b2...bk；其中a和b1,b2...bk均为大于0小于等于100的整数。相邻两个整数之间用单个空格分隔。",
    "inputStyle": "输入",
    "outputTip": "输出",
    "outputStyle": "输出分两行：第一行是被提及最多的人的序号；第二行是提及它的人的序号，从小到大输出，相邻两个数之间用单个空格分隔。同一个序号只输出一次。",
    "inputExample": "<pre>5\n1 2 3 4\n1 0\n90 3 1 2 4\n4 2 3 2\n2 1 3</pre>",
    "outputExample": "<pre>3\n1 2 4</pre>",
    "tip": "医学部计算概论2011年期末考试（谢佳亮）",
    "timeLimited": "1000ms",
    "spaceLimited": "65536kB"
  },
  {
    "id": "7586",
    "category": "1.13编程基础之综合应用",
    "title": "21:最大质因子序列",
    "description": "<p>任意输入两个正整数m, n (1 < m < n <= 5000)，依次输出m到n之间每个数的最大质因子（包括m和n；如果某个数本身是质数，则输出这个数自身）。<br></p>",
    "img": "",
    "inputTip": "一行，包含两个正整数m和n，其间以单个空格间隔。",
    "inputStyle": "输入",
    "outputTip": "输出",
    "outputStyle": "一行，每个整数的最大质因子，以逗号间隔。",
    "inputExample": "<pre>5 10</pre>",
    "outputExample": "<pre>5,3,7,2,3,5</pre>",
    "tip": "元培-From Whf",
    "timeLimited": "1000ms",
    "spaceLimited": "65536kB"
  },
  {
    "id": "7588",
    "category": "1.13编程基础之综合应用",
    "title": "22:因子分解",
    "description": "<p>输入一个数，输出其素因子分解表达式。<br></p>",
    "img": "",
    "inputTip": "输入一个整数 n (2 <= n < 100)。",
    "inputStyle": "输入",
    "outputTip": "输出",
    "outputStyle": "输出该整数的因子分解表达式。表达式中各个素数从小到大排列。如果该整数可以分解出因子a的b次方，当b大于1时，写做 a^b ；当b等于1时，则直接写成a。",
    "inputExample": "<pre>60</pre>",
    "outputExample": "<pre>2^2*3*5</pre>",
    "tip": "习题(9-3)",
    "timeLimited": "1000ms",
    "spaceLimited": "65536kB"
  },
  {
    "id": "7589",
    "category": "1.13编程基础之综合应用",
    "title": "23:区间内的真素数",
    "description": "<p>找出正整数 M 和 N 之间（N 不小于 M）的所有真素数。<br><br>真素数的定义：如果一个正整数 P 为素数，且其反序也为素数，那么 P 就为真素数。<br>例如，11，13 均为真素数，因为11的反序还是为11，13 的反序为 31 也为素数。<br></p>",
    "img": "",
    "inputTip": "输入两个数 M 和 N，空格间隔，1 <= M <= N <= 100000。",
    "inputStyle": "输入",
    "outputTip": "输出",
    "outputStyle": "按从小到大输出 M 和 N 之间（包括 M 和 N ）的真素数，逗号间隔。如果之间没有真素数，则输出 No。",
    "inputExample": "<pre>10 35</pre>",
    "outputExample": "<pre>11,13,17,31</pre>",
    "tip": "元培-From Whf",
    "timeLimited": "1000ms",
    "spaceLimited": "65536kB"
  },
  {
    "id": "7594",
    "category": "1.13编程基础之综合应用",
    "title": "24:打印月历",
    "description": "<p>给定年月，打印当月的月历表。<br></p>",
    "img": "",
    "inputTip": "输入为一行两个整数，第一个整数是年份year（1900 ≤ year ≤ 2099），第二个整数是月份month（1 ≤ month ≤ 12），中间用单个空格隔开。",
    "inputStyle": "输入",
    "outputTip": "输出",
    "outputStyle": "输出为月历表。月历表第一行为星期表头，如下所示：Sun Mon Tue Wed Thu Fri Sat其余各行一次是当月各天的日期，从1日开始到31日（30日或28日）。日期数字应于星期表头右对齐，即各位数与星期表头相应缩写的最后一个字母对齐。日期中间用空格分隔出空白。",
    "inputExample": "<pre>2006 5</pre>",
    "outputExample": "<pre>Sun Mon Tue Wed Thu Fri Sat\n      1   2   3   4   5   6\n  7   8   9  10  11  12  13\n 14  15  16  17  18  19  20\n 21  22  23  24  25  26  27\n 28  29  30  31</pre>",
    "tip": "闰年判断方法：能被4整除但不能被100整除，或者能被400整除。1900年1月1日是周一。",
    "timeLimited": "1000ms",
    "spaceLimited": "65536kB"
  },
  {
    "id": "7595",
    "category": "1.13编程基础之综合应用",
    "title": "25:计算两个日期之间的天数",
    "description": "<p>给定两个日期，计算相差的天数。比如2010-1-1和2010-1-3相差2天。<br><br></p>",
    "img": "",
    "inputTip": "共两行：第一行包含三个整数startYear，startMonth，startDay，分别是起始年、月、日。第二行包含三个整数endYear，endMonth，endDay，分别是结束年、月、日。相邻两个整数之间用单个空格隔开。年份范围在1~3000。保证日期正确且结束日期不早于起始日期。",
    "inputStyle": "输入",
    "outputTip": "输出",
    "outputStyle": "输出一个整数，即是两个日期相差的天数。",
    "inputExample": "<pre>2008 1 1\n2009 1 1</pre>",
    "outputExample": "<pre>366</pre>",
    "tip": "闰年被定义为能被4整除的年份，但是能被100整除而不能被400整除的年是例外，它们不是闰年。闰年的2月份有29天。",
    "timeLimited": "1000ms",
    "spaceLimited": "65536kB"
  },
  {
    "id": "7604",
    "category": "1.13编程基础之综合应用",
    "title": "26:n-gram串频统计",
    "description": "<p>在文本分析中常用到n-gram串频统计方法，即，统计相邻的n个单元（如单词、汉字、或者字符）在整个文本中出现的频率。假设有一个字符串，请以字符为单位，按n-gram方法统计每个长度为 n \n的子串出现的频度，并输出最高频度以及频度最高的子串。所给的字符串只包含大小写字母，长度不多于500个字符，且 1 < n < 5。</p><p>如果有多个子串频度最高，则根据其在序列中第一次出现的次序依次输出，每行输出一个，如果最高频度不大于1，则输出NO。</p>",
    "img": "",
    "inputTip": "第一行为n；第二行为字符串。",
    "inputStyle": "输入",
    "outputTip": "输出",
    "outputStyle": "输出最高频度以及频度最高的所有子串。若最高频度不大于1，只输出一行NO。",
    "inputExample": "<pre>3\nabcdefabcd</pre>",
    "outputExample": "<pre>2\nabc\nbcd</pre>",
    "tip": "样例中，所有的3-gram是：abc,bcd,cde,def,efa,fab,abc,bcd。最后面的cd不足以形成3-gram，则不考虑。这样，abc 和 bcd 都出现了2次，其余的只出现了1次。",
    "timeLimited": "1000ms",
    "spaceLimited": "65536kB"
  },
  {
    "id": "7606",
    "category": "1.13编程基础之综合应用",
    "title": "27:除以13",
    "description": "<p>输入一个大于0的大整数N，长度不超过100位，要求输出其除以13得到的商和余数。<br></p>",
    "img": "",
    "inputTip": "一个大于0的大整数，长度不超过100位。",
    "inputStyle": "输入",
    "outputTip": "输出",
    "outputStyle": "两行，分别为整数除法得到的商和余数。",
    "inputExample": "<pre>2132104848488485</pre>",
    "outputExample": "<pre>164008065268345\n0</pre>",
    "tip": "模拟除法运算，商的长度应该比输入大整数的长度少1或2。",
    "timeLimited": "1000ms",
    "spaceLimited": "65536kB"
  },
  {
    "id": "7610",
    "category": "1.13编程基础之综合应用",
    "title": "28:出现次数超过一半的数",
    "description": "<p>给出一个含有n<span style=\"white-space: normal;\">（0 < n <= 1000）</span>个整数的数组，请找出其中出现次数超过一半的数。 </p><p>数组中的数大于-50且小于50。<br></p>",
    "img": "",
    "inputTip": "第一行包含一个整数n，表示数组大小；第二行包含n个整数，分别是数组中的每个元素，相邻两个元素之间用单个空格隔开。",
    "inputStyle": "输入",
    "outputTip": "输出",
    "outputStyle": "如果存在这样的数，输出这个数；否则输出no。",
    "inputExample": "<pre>3\n1 2 2</pre>",
    "outputExample": "<pre>2</pre>",
    "tip": "习题(13-6)",
    "timeLimited": "1000ms",
    "spaceLimited": "65536kB"
  },
  {
    "id": "7801",
    "category": "1.13编程基础之综合应用",
    "title": "29:统计字符数",
    "description": "<p><span style=\"color: rgb(35, 31, 23);font-family: 'Lucida Grande', Verdana, 'Bitstream Vera Sans', Arial, sans-serif;font-size: 14px\">给定一个由a-z这26个字符组成的字符串，统计其中哪个字符出现的次数最多。</span><br></p>",
    "img": "",
    "inputTip": "输入包含一行，一个字符串，长度不超过1000。",
    "inputStyle": "输入",
    "outputTip": "输出",
    "outputStyle": "输出一行，包括出现次数最多的字符和该字符出现的次数，中间以一个空格分开。如果有多个字符出现的次数相同且最多，那么输出ascii码最小的那一个字符。",
    "inputExample": "<pre>abbccc</pre>",
    "outputExample": "<pre>c 3</pre>",
    "tip": "1744",
    "timeLimited": "1000ms",
    "spaceLimited": "65536kB"
  },
  {
    "id": "7802",
    "category": "1.13编程基础之综合应用",
    "title": "30:1的个数",
    "description": "<p><span style=\"color: rgb(35, 31, 23);font-family: 'Lucida Grande', Verdana, 'Bitstream Vera Sans', Arial, sans-serif;font-size: 14px\">给定一个十进制非负整数N，求其对应2进制数中1的个数。</span><br></p>",
    "img": "",
    "inputTip": "输入包含一行，包含一个非负整数N。(N < 109)",
    "inputStyle": "输入",
    "outputTip": "输出",
    "outputStyle": "输出一行，包含一个整数，表示N的2进制表示中1的个数。",
    "inputExample": "<pre>100</pre>",
    "outputExample": "<pre>3</pre>",
    "tip": "2709",
    "timeLimited": "1000ms",
    "spaceLimited": "65536kB"
  },
  {
    "id": "7803",
    "category": "1.13编程基础之综合应用",
    "title": "31:字符串中最长的连续出现的字符",
    "description": "<p><span style=\"color: rgb(35, 31, 23);font-family: 'Lucida Grande', Verdana, 'Bitstream Vera Sans', Arial, sans-serif;font-size: 14px\">求一个字符串中最长的连续出现的字符，输出该字符及其出现次数。字符串中无空白字符（空格、回车和tab），如果这样的字符不止一个，则输出出现最早的字符。</span><br></p>",
    "img": "",
    "inputTip": "一行，一个不包含空白字符的字符串，字符串长度小于200。",
    "inputStyle": "输入",
    "outputTip": "输出",
    "outputStyle": "一行，输出最长的连续出现的字符及其最长的连续出现次数，中间以一个空格分开。",
    "inputExample": "<pre>aaaaadbbbbbcccccccdddddddddd</pre>",
    "outputExample": "<pre>d 10</pre>",
    "tip": "6373",
    "timeLimited": "1000ms",
    "spaceLimited": "65536kB"
  },
  {
    "id": "7806",
    "category": "1.13编程基础之综合应用",
    "title": "32:日历问题",
    "description": "<p><span style=\"color: rgb(35, 31, 23);font-family: 'Lucida Grande', Verdana, 'Bitstream Vera Sans', Arial, sans-serif;font-size: 14px\">在我们现在使用的日历中, 闰年被定义为能被4整除的年份，但是能被100整除而不能被400整除的年是例外，它们不是闰年。例如：1700, 1800, 1900 和 2100 不是闰年，而 1600, 2000 和 2400是闰年。 给定从公元2000年1月1日开始逝去的天数，你的任务是给出这一天是哪年哪月哪日星期几。</span><br></p>",
    "img": "",
    "inputTip": "输入一行，每行包含一个正整数，表示从2000年1月1日开始逝去的天数。数据保证结果的年份不会超过9999。",
    "inputStyle": "输入",
    "outputTip": "输出",
    "outputStyle": "输出一行，该行包含对应的日期和星期几。格式为“YYYY-MM-DD DayOfWeek”, 其中 “DayOfWeek” 必须是下面中的一个： \"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\" 或 \"Saturday“。",
    "inputExample": "<pre>1</pre>",
    "outputExample": "<pre>2000-01-02 Sunday</pre>",
    "tip": "2080",
    "timeLimited": "1000ms",
    "spaceLimited": "65536kB"
  },
  {
    "id": "7879",
    "category": "1.13编程基础之综合应用",
    "title": "33:实数加法",
    "description": "<p><span style=\"white-space: normal;\">求2个实数相加的和。</span></p><p><span style=\"white-space: normal;\">输入输出中出现的实数都有如下的形式： P</span><sub style=\"white-space: normal;\">1</sub><span style=\"white-space: normal;\">P</span><sub style=\"white-space: normal;\">2</sub><span style=\"white-space: normal;\">...P</span><sub style=\"white-space: normal;\">i</sub><span style=\"white-space: normal;\">.Q</span><sub style=\"white-space: normal;\">1</sub><span style=\"white-space: normal;\">Q</span><sub style=\"white-space: normal;\">2</sub><span style=\"white-space: normal;\">...Q</span><sub style=\"white-space: normal;\">j。</sub><span style=\"white-space: normal;\">对于整数部分，P</span><sub style=\"white-space: normal;\">1</sub><span style=\"white-space: normal;\">P</span><sub style=\"white-space: normal;\">2</sub><span style=\"white-space: normal;\">...P</span><sub style=\"white-space: normal;\">i</sub><span style=\"white-space: normal;\">是一个非负整数；对于小数部分，至少有一位且最后一位Q</span><sub style=\"white-space: normal;\">j</sub><span style=\"white-space: normal;\">不等于0。</span><br></p>",
    "img": "",
    "inputTip": "2行，分别是两个加数。每个加数不超过100个字符。",
    "inputStyle": "输入",
    "outputTip": "输出",
    "outputStyle": "一行输出是相应的和。数据保证一定是一个小数部分不为0的实数。",
    "inputExample": "<pre>0.111111111111111111111111111111\n0.111111111111111111111111111111</pre>",
    "outputExample": "<pre>0.222222222222222222222222222222</pre>",
    "tip": "",
    "timeLimited": "1000ms",
    "spaceLimited": "65536kB"
  },
  {
    "id": "7880",
    "category": "1.13编程基础之综合应用",
    "title": "34:确定进制",
    "description": "<p><span style=\"white-space: normal;\">6 * 9 = 42 对于十进制来说是错误的，但是对于13进制来说是正确的。即, 6<sub>(13)</sub>* 9<sub>(13)</sub>= 42<sub>(13)</sub>， 而 42<sub>(13)</sub>= 4 * 13<sup>1</sup>+ 2 * 13<sup>0</sup>= 54<sub>(10)</sub>。</span></p><p><span style=\"white-space: normal;\">你的任务是写一段程序，读入三个整数p、q和 r，然后确定一个进制 B(2<=B<=16) 使得 p * q = r。 如果 B 有很多选择, 输出最小的一个。</span></p><p><span style=\"white-space: normal;\">例如：p = 11, q = 11, r = 121. 则有 11<sub>(3)</sub>* 11<sub>(3)</sub>= 121<sub>(3)</sub>因为 11<sub>(3)</sub>= 1 * 3<sup>1</sup>+ 1 * 3<sup>0</sup>= 4<sub>(10)</sub>和 121<sub>(3)</sub>= 1 * 3<sup>2</sup>+ 2 * 3<sup>1</sup>+ 1 * 3<sup>0</sup>= 16<sub>(10)</sub>。 对于进制 10，同样有 11<sub>(10)</sub>* 11<sub>(10)</sub>= 121<sub>(10)</sub>。这种情况下，应该输出 3。如果没有合适的进制，则输出 0。</span><br></p>",
    "img": "",
    "inputTip": "一行，包含三个整数p、q、r。 p、q、r的所有位都是数字，并且1 <= p、q、r <= 1,000,000。",
    "inputStyle": "输入",
    "outputTip": "输出",
    "outputStyle": "一个整数：即使得p * q = r成立的最小的B。如果没有合适的B，则输出 0。",
    "inputExample": "<pre>6 9 42</pre>",
    "outputExample": "<pre>13</pre>",
    "tip": "Taejon 2002, POJ 1331, 程序设计实习07",
    "timeLimited": "1000ms",
    "spaceLimited": "65536kB"
  },
  {
    "id": "7881",
    "category": "1.13编程基础之综合应用",
    "title": "35:输出二进制补码",
    "description": "<p><span style=\"color: rgb(35, 31, 23);font-family: 'Lucida Grande', Verdana, 'Bitstream Vera Sans', Arial, sans-serif;font-size: 14px\">输入一个整型(int)的整数，输出它的32位二进制补码。</span><br></p>",
    "img": "",
    "inputTip": "一个整型整数。",
    "inputStyle": "输入",
    "outputTip": "输出",
    "outputStyle": "输出一行，即该整数的补码表示。",
    "inputExample": "<pre>7</pre>",
    "outputExample": "<pre>00000000000000000000000000000111</pre>",
    "tip": "",
    "timeLimited": "1000ms",
    "spaceLimited": "65536kB"
  },
  {
    "id": "7888",
    "category": "1.13编程基础之综合应用",
    "title": "36:二进制分类",
    "description": "<p class=\"MsoNormal\">若将一个正整数化为二进制数，在此二进制数中，我们将数字<span>1</span>的个数多于数字<span>0</span>的个数的这类二进制数称为<span>A</span>类数，否则就称其为<span>B</span>类数。</p><p class=\"MsoNormal\">例如：</p><p class=\"MsoNormal\"><span>(13)</span><sub><span>10 </span></sub><span>= (</span><span>1101)</span><sub><span>2</span></sub>，其中<span>1</span>的个数为<span>3</span>，<span>0</span>的个数为<span>1</span>，则称此数为<span>A</span>类数；</p><p class=\"MsoNormal\"><span>(10)</span><sub><span>10 </span></sub><span>= (</span><span>1010)</span><sub><span>2</span></sub>，其中<span>1</span>的个数为<span>2</span>，<span>0</span>的个数也为<span>2</span>，称此数为<span>B</span>类数；</p><p class=\"MsoNormal\"><span>(24)</span><sub><span>10 </span></sub><span>= (</span><span>11000)</span><sub><span>2</span></sub>，其中<span>1</span>的个数为<span>2</span>，<span>0</span>的个数为<span>3</span>，则称此数为<span>B</span>类数；</p><p class=\"MsoNormal\">程序要求：求出<span>1</span>～<span>1000</span>之中（包括<span>1</span>与<span>1000</span>），全部<span>A</span>、<span>B</span>两类数的个数。</p><p><br></p>",
    "img": "",
    "inputTip": "无。",
    "inputStyle": "输入",
    "outputTip": "输出",
    "outputStyle": "一行，包含两个整数，分别是A类数和B类数的个数，中间用单个空格隔开。",
    "inputExample": "<pre>（无）</pre>",
    "outputExample": "<pre>（不提供）</pre>",
    "tip": "NOIP1995复赛 普及组 第三题",
    "timeLimited": "1000ms",
    "spaceLimited": "65536kB"
  },
  {
    "id": "7893",
    "category": "1.13编程基础之综合应用",
    "title": "37:乒乓球",
    "description": "<p>国际乒联现在主席沙拉拉自从上任以来就立志于推行一系列改革，以推动乒乓球运动在全球的普及。其中11分制改革引起了很大的争议，有一部分球员因为无法适应新规则只能选择退役。华华就是其中一位，他退役之后走上了乒乓球研究工作，意图弄明白11分制和21分制对选手的不同影响。在开展他的研究之前，他首先需要对他多年比赛的统计数据进行一些分析，所以需要你的帮忙。\n</p><p>华华通过以下方式进行分析，首先将比赛每个球的胜负列成一张表，然后分别计算在11分制和21分制下，双方的比赛结果（截至记录末尾）。</p><p>比如现在有这么一份记录，（其中W表示华华获得一分，L表示华华对手获得一分）：</p><p>WWWWWWWWWWWWWWWWWWWWWWLW</p><p>在11分制下，此时比赛的结果是华华第一局11比0获胜，第二局11比0获胜，正在进行第三局，当前比分1比1。而在21分制下，此时比赛结果是华华第一局21比0获胜，正在进行第二局，比分2比1。如果一局比赛刚开始，则此时比分为0比0。</p><p>你的程序就是要对于一系列比赛信息的输入（WL形式），输出正确的结果。\n\n</p>",
    "img": "",
    "inputTip": "包含若干行字符串（每行至多20个字母），字符串由大写的W、L和E组成。其中E表示比赛信息结束，程序应该忽略E之后的所有内容。",
    "inputStyle": "输入",
    "outputTip": "输出",
    "outputStyle": "输出由两部分组成，每部分有若干行，每一行对应一局比赛的比分（按比赛信息输入顺序）。其中第一部分是11分制下的结果，第二部分是21分制下的结果，两部分之间由一个空行分隔。",
    "inputExample": "<pre>WWWWWWWWWWWWWWWWWWWW\nWWLWE\n</pre>",
    "outputExample": "<pre>11:0\n11:0\n1:1\n\n21:0\n2:1\n</pre>",
    "tip": "按乒乓球比赛规则，每一局中，领先一方达到一定得分（11分制为11分，21分制为21分），且净胜对手至少2分，才能够获得胜利；本题中，假设比赛无局数限制；输入字符串总长可能很长。",
    "timeLimited": "1000ms",
    "spaceLimited": "65536kB"
  },
  {
    "id": "7902",
    "category": "1.13编程基础之综合应用",
    "title": "38:花生采摘",
    "description": "<p>鲁宾逊先生有一只宠物猴，名叫多多。这天，他们两个正沿着乡间小路散步，突然发现路边的告示牌上贴着一张小小的纸条：“欢迎免费品尝我种的花生！——熊字”。</p><p>鲁宾逊先生和多多都很开心，因为花生正是他们的最爱。在告示牌背后，路边真的有一块花生田，花生植株整齐地排列成矩形网格（如图1）。有经验的多多一眼就能看出，每棵花生植株下的花生有多少。为了训练多多的算术，鲁宾逊先生说：“你先找出花生最多的植株，去采摘它的花生；然后再找出剩下的植株里花生最多的，去采摘它的花生；依此类推，不过你一定要在我限定的时间内回到路边。”</p><p>我们假定多多在每个单位时间内，可以做下列四件事情中的一件：</p><p>1)      从路边跳到最靠近路边（即第一行）的某棵花生植株；</p><p>2)      从一棵植株跳到前后左右与之相邻的另一棵植株；</p><p>3)      采摘一棵植株下的花生；</p><p>4)      从最靠近路边（即第一行）的某棵花生植株跳回路边。</p><p style=\"text-align: center;\"><img src=\"http://media.openjudge.cn/images/upload/1446616081.jpg\" width=\"530\" height=\"320\"><br></p><p>现在给定一块花生田的大小和花生的分布，请问在限定时间内，多多最多可以采到多少个花生？注意可能只有部分植株下面长有花生，假设这些植株下的花生个数各不相同。</p><p>例如在图2所示的花生田里，只有位于(2, 5), (3, 7), (4, 2), (5, 4)的植株下长有花生，个数分别为13, 7, 15, 9。沿着图示的路线，多多在21个单位时间内，最多可以采到37个花生。\n</p>",
    "img": "",
    "inputTip": "第一行包括三个整数，M, N和K，用空格隔开；表示花生田的大小为M * N（1 <= M, N <= 20），多多采花生的限定时间为K（0 <= K <= 1000）个单位时间。接下来的M行，每行包括N个非负整数，也用空格隔开；第i + 1行的第j个整数Pij（0 <= Pij <= 500）表示花生田里植株(i, j)下花生的数目，0表示该植株下没有花生。",
    "inputStyle": "输入",
    "outputTip": "输出",
    "outputStyle": "包括一行，这一行只包含一个整数，即在限定时间内，多多最多可以采到花生的个数。",
    "inputExample": "<pre>样例 #1：\n6 7 21\n0 0 0 0 0 0 0\n0 0 0 0 13 0 0\n0 0 0 0 0 0 7\n0 15 0 0 0 0 0\n0 0 0 9 0 0 0\n0 0 0 0 0 0 0\n\n样例 #2：\n6 7 20\n0 0 0 0 0 0 0\n0 0 0 0 13 0 0\n0 0 0 0 0 0 7\n0 15 0 0 0 0 0\n0 0 0 9 0 0 0\n0 0 0 0 0 0 0\n</pre>",
    "outputExample": "<pre>样例 #1：\n37\n\n样例 #2：\n28</pre>",
    "tip": "NOIP2004复赛 普及组 第二题",
    "timeLimited": "1000ms",
    "spaceLimited": "65536kB"
  },
  {
    "id": "7913",
    "category": "1.13编程基础之综合应用",
    "title": "39:多项式输出",
    "description": "<p>一元 n 次多项式可用如下的表达式表示：</p><p><span style=\"color: rgb(35, 31, 23);font-family: 'Lucida Grande', Verdana, 'Bitstream Vera Sans', Arial, sans-serif;font-size: 14px\">f(x)=a</span><sub style=\"color: rgb(35, 31, 23); font-family: 'Lucida Grande', Verdana, 'Bitstream Vera Sans', Arial, sans-serif; line-height: 21px; white-space: normal;\">n</sub><span style=\"color: rgb(35, 31, 23);font-family: 'Lucida Grande', Verdana, 'Bitstream Vera Sans', Arial, sans-serif;font-size: 14px\">x</span><sup style=\"color: rgb(35, 31, 23); font-family: 'Lucida Grande', Verdana, 'Bitstream Vera Sans', Arial, sans-serif; line-height: 21px; white-space: normal;\">n</sup><span style=\"color: rgb(35, 31, 23);font-family: 'Lucida Grande', Verdana, 'Bitstream Vera Sans', Arial, sans-serif;font-size: 14px\">+a</span><sub style=\"color: rgb(35, 31, 23); font-family: 'Lucida Grande', Verdana, 'Bitstream Vera Sans', Arial, sans-serif; line-height: 21px; white-space: normal;\">n-1</sub><span style=\"color: rgb(35, 31, 23);font-family: 'Lucida Grande', Verdana, 'Bitstream Vera Sans', Arial, sans-serif;font-size: 14px\">x</span><sup style=\"color: rgb(35, 31, 23); font-family: 'Lucida Grande', Verdana, 'Bitstream Vera Sans', Arial, sans-serif; line-height: 21px; white-space: normal;\">n-1</sup><span style=\"color: rgb(35, 31, 23);font-family: 'Lucida Grande', Verdana, 'Bitstream Vera Sans', Arial, sans-serif;font-size: 14px\">+...+a</span><sub style=\"color: rgb(35, 31, 23); font-family: 'Lucida Grande', Verdana, 'Bitstream Vera Sans', Arial, sans-serif; line-height: 21px; white-space: normal;\">1</sub><span style=\"color: rgb(35, 31, 23);font-family: 'Lucida Grande', Verdana, 'Bitstream Vera Sans', Arial, sans-serif;font-size: 14px\">x+a</span><sub style=\"color: rgb(35, 31, 23); font-family: 'Lucida Grande', Verdana, 'Bitstream Vera Sans', Arial, sans-serif; line-height: 21px; white-space: normal;\">0</sub><span style=\"color: rgb(35, 31, 23);font-family: 'Lucida Grande', Verdana, 'Bitstream Vera Sans', Arial, sans-serif;font-size: 14px\">，a</span><sub style=\"color: rgb(35, 31, 23); font-family: 'Lucida Grande', Verdana, 'Bitstream Vera Sans', Arial, sans-serif; line-height: 21px; white-space: normal;\">n</sub><span style=\"color: rgb(35, 31, 23);font-family: 'Lucida Grande', Verdana, 'Bitstream Vera Sans', Arial, sans-serif;font-size: 14px\">≠0</span><br></p><p>其中，<span style=\"color: rgb(35, 31, 23);font-family: 'Lucida Grande', Verdana, 'Bitstream Vera Sans', Arial, sans-serif;font-size: 14px\">a</span><sub style=\"color: rgb(35, 31, 23); font-family: 'Lucida Grande', Verdana, 'Bitstream Vera Sans', Arial, sans-serif; line-height: 21px; white-space: normal;\">i</sub><span style=\"color: rgb(35, 31, 23);font-family: 'Lucida Grande', Verdana, 'Bitstream Vera Sans', Arial, sans-serif;font-size: 14px\">x</span><sup style=\"color: rgb(35, 31, 23); font-family: 'Lucida Grande', Verdana, 'Bitstream Vera Sans', Arial, sans-serif; line-height: 21px; white-space: normal;\">i</sup>称为i次项，<span style=\"color: rgb(35, 31, 23);font-family: 'Lucida Grande', Verdana, 'Bitstream Vera Sans', Arial, sans-serif;font-size: 14px\">a</span><sub style=\"color: rgb(35, 31, 23); font-family: 'Lucida Grande', Verdana, 'Bitstream Vera Sans', Arial, sans-serif; line-height: 21px; white-space: normal;\">i</sub>称为i次项的系数。给出一个一元多项式各项的次数和系数，请按照如下规定的格式要求输出该多项式：</p><p>1. 多项式中自变量为x，从左到右按照次数递减顺序给出多项式。</p><p>2. 多项式中只包含系数不为0的项。</p><p>3. 如果多项式n次项系数为正，则多项式开头不出现“+”号，如果多项式n次项系数为负，则多项式以“-”号开头。</p><p>4. 对于不是最高次的项，以“+”号或者“-”号连接此项与前一项，分别表示此项系数为正或者系数为负。紧跟一个正整数，表示此项系数的绝对值（如果一个高于0次的项，其系数的绝对值为1，则无需输出1）。如果x的指数大于1，则接下来紧跟的指数部分的形式为“x^b”，其中b为x的指数；如果x的指数为1，则接下来紧跟的指数部分形式为“x”； 如果x的指数为0，则仅需输出系数即可。</p><p>5. 多项式中，多项式的开头、结尾不含多余的空格。\n</p>",
    "img": "",
    "inputTip": "共有2 行：第一行 1 个整数 n，表示一元多项式的次数。第二行有 n+1 个整数，其中第 i 个整数表示第 n-i+1 次项的系数，每两个整数之间用空格隔开。1 ≤ n ≤ 100，多项式各次项系数的绝对值均不超过100。",
    "inputStyle": "输入",
    "outputTip": "输出",
    "outputStyle": "共1行，按题目所述格式输出多项式。",
    "inputExample": "<pre>样例 #1：\n5\n100 -1 1 -3 0 10\n\n样例 #2：\n3\n-50 0 0 1</pre>",
    "outputExample": "<pre>样例 #1：\n100x^5-x^4+x^3-3x^2+10\n\n样例 #2：\n-50x^3+1</pre>",
    "tip": "NOIP2009复赛 普及组 第一题",
    "timeLimited": "1000ms",
    "spaceLimited": "65536kB"
  },
  {
    "id": "8185",
    "category": "1.13编程基础之综合应用",
    "title": "40:提取数字串按数值排序",
    "description": "<p><span style=\"font-family: 'Times New Roman';font-size: 14.6666669845581px;background-color: rgb(255, 255, 255)\">给定一个字符串，请将其中的所有数字串提取，并将每个数字串作为整数看待（假设可以用int 表示），按从小到大顺序输出结果，输出的整数之间以逗号间隔。如果没有数字，则输出0；例如：*1234.345#6781ad9jk81-11101?aght88ir09kp，其中的整数包括：1234，345，6781，9，81，11101，88，9，从小到大排序后，应该输出： </span><br style=\"font-family: 'Times New Roman'; font-size: 14.6666669845581px; line-height: 22px; white-space: normal;\"><span style=\"font-family: 'Times New Roman';font-size: 14.6666669845581px;background-color: rgb(255, 255, 255)\">9，9，81，88，345，1234，6781，11101 </span><br></p>",
    "img": "",
    "inputTip": "在一行内输入一串符号，长度不大于300。输入数据保证提取的整数不超过109。",
    "inputStyle": "输入",
    "outputTip": "输出",
    "outputStyle": "从小到大排序的整数序列，如果没有数字，则输出0；",
    "inputExample": "<pre>*1234.345#6781ad9jk81-11101?aght88ir09kp</pre>",
    "outputExample": "<pre>9,9,81,88,345,1234,6781,11101</pre>",
    "tip": "元培-From Whf",
    "timeLimited": "1000ms",
    "spaceLimited": "65536kB"
  },
  {
    "id": "8186",
    "category": "1.13编程基础之综合应用",
    "title": "41:判断元素是否存在",
    "description": "<p>有一个集合M是这样生成的： \n(1) 已知 k 是集合 M 的元素； \n(2) 如果 y 是 M 的元素，那么， 2y+1 和 3y+1 都是 M 的元素； \n(3) 除了上述二种情况外，没有别的数能够成为 M 的一个元素。</p><p>问题：任意给定 k 和 x，请判断 x 是否是 M 的元素。这里的 k是无符号整数，x 不大于 100000， \n如果是，则输出YES，否则，输出 NO </p>",
    "img": "",
    "inputTip": "输入整数 k 和 x, 逗号间隔。",
    "inputStyle": "输入",
    "outputTip": "输出",
    "outputStyle": "如果是，则输出 YES，否则，输出NO",
    "inputExample": "<pre>0,22</pre>",
    "outputExample": "<pre>YES</pre>",
    "tip": "元培-From Whf",
    "timeLimited": "1000ms",
    "spaceLimited": "65536kB"
  },
  {
    "id": "8187",
    "category": "1.13编程基础之综合应用",
    "title": "42:出书最多",
    "description": "<p><span style=\"font-family: 'Times New Roman';font-size: 14.6666669845581px;background-color: rgb(255, 255, 255)\">假定图书馆新进了m（10 ≤ m ≤ 999）本图书，它们都是由n（1 ≤ n ≤ 26）个作者独立或相互合作编著的。假设m本图书编号为整数（1到999），作者的姓名为字母（'A'到'Z'），请根据图书作者列表找出参与编著图书最多的作者和他的图书列表。</span><br></p>",
    "img": "",
    "inputTip": "第一行为所进图书数量m，其余m行，每行是一本图书的信息，其中第一个整数为图书编号，接着一个空格之后是一个由大写英文字母组成的没有重复字符的字符串，每个字母代表一个作者。输入数据保证仅有一个作者出书最多。",
    "inputStyle": "输入",
    "outputTip": "输出",
    "outputStyle": "输出有多行： 第一行为出书最多的作者字母； 第二行为作者出书的数量； 其余各行为作者参与编著的图书编号（按输入顺序输出）。",
    "inputExample": "<pre>11\n307 F\n895 H\n410 GPKCV\n567 SPIM\n822 YSHDLPM\n834 BXPRD\n872 LJU\n791 BPJWIA\n580 AGMVY\n619 NAFL\n233 PDJWXK</pre>",
    "outputExample": "<pre>P\n6\n410\n567\n822\n834\n791\n233</pre>",
    "tip": "北京大学 计算概论 06 心理及信管 期末考试",
    "timeLimited": "1000ms",
    "spaceLimited": "65536kB"
  },
  {
    "id": "8188",
    "category": "1.13编程基础之综合应用",
    "title": "43:相关月",
    "description": "<p><span style=\"font-family: 'Times New Roman';font-size: 14.6666669845581px;background-color: rgb(255, 255, 255)\">“相关月”是指那些在一年中月份的第一天星期数相同的月份。例如，九月和十二月是相关的，因为九月一日和十二月一日的星期数总是相同的。两个月份相关，当且仅当两个月份第一天相差的天数能被7整除，也就是说，这两天相差为几个整星期。又如，二月和三月一般都是相关月，因为二月有28天，能被7整除，也恰好为4个星期。而在闰年，一月和二月的相关月与它们在平年的相关月是不同的，因为二月有29天，其后每个月份的第一天星期数都推后了一天。</span><br></p>",
    "img": "",
    "inputTip": "输入的第一行为整数n（n ≤ 200）， 其后n行，每行三个整数，依次为一个年份和两个月份，整数之间用一个空格分隔。",
    "inputStyle": "输入",
    "outputTip": "输出",
    "outputStyle": "输出有n行，对应于每个输入的年份和相应两个月份， 如果这两个月份是相关的，则输出YES； 否则，输出NO。",
    "inputExample": "<pre>5\n1994 10 9\n1935 12 1\n1957 1 9\n1917 9 12\n1948 1 4</pre>",
    "outputExample": "<pre>NO\nNO\nNO\nYES\nYES</pre>",
    "tip": "北京大学医学部计算概论08期末考试题",
    "timeLimited": "1000ms",
    "spaceLimited": "65536kB"
  },
  {
    "id": "8214",
    "category": "1.13编程基础之综合应用",
    "title": "44:正整数的任意进制转换",
    "description": "<p><span style=\"font-family: 'Times New Roman';font-size: 14.6666669845581px;background-color: rgb(255, 255, 255)\">将 p 进制 n 转换为 q 进制。p 和 q 的取值范围为[2，36]，其中，用到的数码按从小到大依次为：0，1，2，3，4，5，6，7，8，9，A，B，...，Z，不考虑小写字母。 </span><br style=\"font-family: 'Times New Roman'; font-size: 14.6666669845581px; line-height: 22px; white-space: normal;\"><br style=\"font-family: 'Times New Roman'; font-size: 14.6666669845581px; line-height: 22px; white-space: normal;\"><br style=\"font-family: 'Times New Roman'; font-size: 14.6666669845581px; line-height: 22px; white-space: normal;\"><br></p>",
    "img": "",
    "inputTip": "一共1+m 行： 第1行为 m，表示后面有 m 行（1 <= m <= 60）. 其后的m行中，每行3个数: 进制p，p进制数n，以及进制 q。 三个数之间用逗号间隔。n 的长度不超过50位。",
    "inputStyle": "输入",
    "outputTip": "输出",
    "outputStyle": "转换后的 q 进制数。",
    "inputExample": "<pre>6\n18,2345678A123,18\n15,23456,18\n12,2345678,20\n16,12345678,23\n25,3456AB,21\n18,AB1234567,22</pre>",
    "outputExample": "<pre>2345678A123\n114E0\n22B7A4\n21A976L\n7C2136\n22JF0G367</pre>",
    "tip": "元培-From Whf",
    "timeLimited": "1000ms",
    "spaceLimited": "65536kB"
  },
  {
    "id": "1736",
    "category": "1.13编程基础之综合应用",
    "title": "45:十进制到八进制",
    "description": "<p>把一个十进制正整数转化成八进制。</p>",
    "img": "",
    "inputTip": "一行，仅含一个十进制表示的整数a(0 < a < 65536)。",
    "inputStyle": "输入",
    "outputTip": "输出",
    "outputStyle": "一行，a的八进制表示。",
    "inputExample": "<pre>9</pre>",
    "outputExample": "<pre>11</pre>",
    "tip": "",
    "timeLimited": "1000ms",
    "spaceLimited": "65536kB"
  },
  {
    "id": "1737",
    "category": "1.13编程基础之综合应用",
    "title": "46:八进制到十进制",
    "description": "<p>把一个八进制正整数转化成十进制。</p>",
    "img": "",
    "inputTip": "一行，仅含一个八进制表示的正整数a，a的十进制表示的范围是(0, 65536)。",
    "inputStyle": "输入",
    "outputTip": "输出",
    "outputStyle": "一行，a的十进制表示。",
    "inputExample": "<pre>11</pre>",
    "outputExample": "<pre>9</pre>",
    "tip": "",
    "timeLimited": "1000ms",
    "spaceLimited": "65536kB"
  },
  {
    "id": "1739",
    "category": "1.13编程基础之综合应用",
    "title": "47:大整数除法",
    "description": "<p>求两个大的正整数相除的商。</p>",
    "img": "",
    "inputTip": "第1行是被除数，第2行是除数。每个数均不超过100位。",
    "inputStyle": "输入",
    "outputTip": "输出",
    "outputStyle": "一行，相应的商的整数部分",
    "inputExample": "<pre>2376\n24\n</pre>",
    "outputExample": "<pre>99</pre>",
    "tip": "",
    "timeLimited": "1000ms",
    "spaceLimited": "65536kB"
  },
  {
    "id": "1740",
    "category": "1.13编程基础之综合应用",
    "title": "48:实数加法",
    "description": "<p>求两个实数相加的和。</p><p>题目中输入输出里出现的浮点数都有如下的形式：<br>P<sub>1</sub>P<sub>2</sub>...P<sub>i</sub>.Q<sub>1</sub>Q<sub>2</sub>...Q<sub>j。</sub>对于整数部分，P<sub>1</sub>P<sub>2</sub>...P<sub>i</sub>是一个非负整数且当整数部分不为0时，<span style=\"white-space: normal;\">P</span><sub style=\"white-space: normal;\">1</sub><span style=\"white-space: normal;\">不等于0</span>；对于小数部分，Q<sub>j</sub>不等于0。</p>",
    "img": "",
    "inputTip": "2行，每行是一个加数。每个加数的长度不超过100。",
    "inputStyle": "输入",
    "outputTip": "输出",
    "outputStyle": "一行，即相应的和。输出保证一定是一个小数部分不为0的实数。",
    "inputExample": "<pre>0.111111111111111111111111111111\n0.111111111111111111111111111111</pre>",
    "outputExample": "<pre>0.222222222222222222222222222222</pre>",
    "tip": "",
    "timeLimited": "1000ms",
    "spaceLimited": "65536kB"
  },
  {
    "id": "1741",
    "category": "1.13编程基础之综合应用",
    "title": "49:计算对数",
    "description": "<p>给定两个正整数a（a>1)和b。可以知道一定存在整数x，使得</p><p>x <= log<sub>a</sub>b < x + 1 或者 a<sup>x</sup><= b < a<sup>x+1</sup></p><p>请计算x。</p>",
    "img": "",
    "inputTip": "两行，第一行是a，第二行是b。每个整数均不超过100位。",
    "inputStyle": "输入",
    "outputTip": "输出",
    "outputStyle": "一行，即对应的x。输入数据保证x不大于20。",
    "inputExample": "<pre>10000\n1000000000001</pre>",
    "outputExample": "<pre>3</pre>",
    "tip": "",
    "timeLimited": "1000ms",
    "spaceLimited": "65536kB"
  },
  {
    "id": "1766",
    "category": "1.13编程基础之综合应用",
    "title": "50:数根",
    "description": "<p>数根可以通过把一个数的各个位上的数字加起来得到。如果得到的数是一位数，那么这个数就是数根。如果结果是两位数或者包括更多位的数字，那么再把这些数字加起来。如此进行下去，直到得到是一位数为止。<br><br>比如，对于24来说，把2和4相加得到6，由于6是一位数，因此6是24的数根。再比如39，把3和9加起来得到12，由于12不是一位数，因此还得把1和2加起来，最后得到3，这是一个一位数，因此3是39的数根。</p>",
    "img": "",
    "inputTip": "一个正整数(小于101000)。",
    "inputStyle": "输入",
    "outputTip": "输出",
    "outputStyle": "一个数字，即输入数字的数根。",
    "inputExample": "<pre>24</pre>",
    "outputExample": "<pre>6</pre>",
    "tip": "翻译自 Greater New York 2000 的试题",
    "timeLimited": "1000ms",
    "spaceLimited": "65536kB"
  },
  {
    "id": "1822",
    "category": "1.13编程基础之综合应用",
    "title": "51:古代密码",
    "description": "<p>古罗马帝国有一个拥有各种部门的强大政府组织。其中一个部门就是保密服务部门。为了保险起见，在省与省之间传递的重要文件中的大写字母是加密的。当时最流行的加密方法是替换和重新排列。</p><p>替换方法是将所有出现的字符替换成其它的字符。有些字符会替换成它自己。例如：替换规则可以是将'A' 到 'Y'替换成它的下一个字符，将'Z'替换成 'A'，如果原词是 \"VICTORIOUS\" 则它变成 \"WJDUPSJPVT\"。</p><p>排列方法改变原来单词中字母的顺序。例如：将顺序<span style=\"font-family: 'Times New Roman', Times, serif\"><2, 8=\"\"><!--2,--></span>应用到 \"VICTORIOUS\" 上，则得到\"IVOTCIRSUO\"。</p><p>人们很快意识到单独应用替换方法或排列方法加密，都是很不保险的。但是如果结合这两种方法，在当时就可以得到非常可靠的加密方法。所以，很多重要信息先使用替换方法加密，再将加密的结果用排列的方法加密。用两种方法结合就可以将\"VICTORIOUS\" 加密成\"JWPUDJSTVP\"。</p><p>考古学家最近在一个石台上发现了一些信息。初看起来它们毫无意义，所以有人设想它们可能是用替换和排列的方法被加密了。人们试着解读了石台上的密码，现在他们想检查解读的是否正确。他们需要一个计算机程序来验证，你的任务就是写这个验证程序。<br></p>",
    "img": "",
    "inputTip": "输入有两行。第一行是石台上的文字。文字中没有空格，并且只有大写英文字母。第二行是被解读出来的加密前的文字。第二行也是由大写英文字母构成的。两行字符数目的长度都不超过100。",
    "inputStyle": "输入",
    "outputTip": "输出",
    "outputStyle": "如果第二行经过某种加密方法后可以产生第一行的信息，输出 \"YES\"，否则输出\"NO\"。",
    "inputExample": "<pre>JWPUDJSTVP\nVICTORIOUS</pre>",
    "outputExample": "<pre>YES\n</pre>",
    "tip": "2159",
    "timeLimited": "1000ms",
    "spaceLimited": "65536kB"
  }
]