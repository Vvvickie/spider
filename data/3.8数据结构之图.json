[
  {
    "id": "2405",
    "category": "3.8数据结构之图",
    "title": "2405:Avoid The Lakes",
    "description": "Farmer John's farm was flooded in the most recent storm, a fact only aggravated by the information that his cows are deathly afraid of water. His insurance agency will only repay him, however, an amount depending on the size of the largest \"lake\" on his farm.<br><br>The farm is represented as a rectangular grid with N (1 <= N <= 100) rows and M (1 <= M <= 100) columns. Each cell in the grid is either dry or submerged, and exactly K (1 <= K <= N*M) of the cells are submerged. As one would expect, a lake has a central cell to which other cells connect by sharing a long edge (not a corner). Any cell that shares a long edge with the central cell or shares a long edge with any connected cell becomes a connected cell and is part of the lake.<br>",
    "img": "",
    "inputTip": "* Line 1: Three space-separated integers: N, M, and K* Lines 2..K+1: Line i+1 describes one submerged location with two space separated integers that are its row and column: R and C",
    "inputStyle": "输入",
    "outputTip": "输出",
    "outputStyle": "* Line 1: The number of cells that the largest lake contains.",
    "inputExample": "<pre>3 4 5\n3 2\n2 2\n3 1\n2 3\n1 1\n</pre>",
    "outputExample": "<pre>4</pre>",
    "tip": "INPUT DETAILS:The farm is a grid with three rows and four columns; five of the cells are submerged. They are located in the positions (row 3, column 2); (row 2, column 2); (row 3, column 1); (row 2, column 3); (row 1, column 1):              # . . .              . # # .              # # . .OUTPUT DETAILS:The largest lake consists of the input's first four cells.",
    "timeLimited": "20000ms",
    "spaceLimited": "1000ms"
  },
  {
    "id": "2724",
    "category": "3.8数据结构之图",
    "title": "2724:围棋",
    "description": "围棋的棋盘上有19*19条线交织成的361个交点，黑棋和白棋可以下在交点上。我们称这些交点为“目”。<br><br>一个目的上下左右四个方向，称之为“气”，如果一个目的四个方向都被某一种颜色的棋子占据，那么即使这个目上并没有棋子，仍然认为这个目被该颜色棋子占据。<br><br>如下图中，四个黑棋中心的交点，由于被黑棋包围，因此我们认为这个目属于黑棋，<br><center><img src=\"http://media.openjudge.cn/images/37231.jpg\" border=\"0\"><br>黑棋拥有4+1=5目</center><br><br>在棋盘的边框地区，只要占据目的三个方向，就可以拥有这个目。<br><center><img src=\"http://media.openjudge.cn/images/37232.jpg\" border=\"0\"><br>黑棋拥有3+1=4目</center><br><br>同理在棋盘的四个角上，只要占据目的两个气即可。<br><br><center><img src=\"http://media.openjudge.cn/images/37233.jpg\" border=\"0\"><br>黑棋拥有2+1=3目</center><br><br><br>推而广之，当有多个目互相连通的时候，如果能用一种颜色把所有交点的气都包裹住，那么就拥有所有目。<br><center><img src=\"http://media.openjudge.cn/images/37234.jpg\" border=\"0\"><br>黑棋拥有6+2 = 8目</center><br><br>请编写一个程序，计算棋盘上黑棋和白棋的目数。<br>输入数据中保证所有的目，不是被黑棋包裹，就是被白棋包裹。不用考虑某些棋子按照围棋规则实际上是死的，以及互相吃（打劫），双活等情况。<br>",
    "img": "",
    "inputTip": "第一行，只有一个整数N(1<=N<=100)，代表棋盘的尺寸是N * N第2~n+1行，每行n个字符，代表棋盘上的棋子颜色。“.”代表一个没有棋子的目“B”代表黑棋“W”代表白棋",
    "inputStyle": "输入",
    "outputTip": "输出",
    "outputStyle": "只有一行，包含用空格分隔的两个数字，第一个数是黑棋的目数，第二个数是白棋的目数。",
    "inputExample": "<pre>4\n..BW\n...B\n....\n....\n</pre>",
    "outputExample": "<pre>15 1</pre>",
    "tip": "",
    "timeLimited": "1000ms",
    "spaceLimited": "65536kB"
  },
  {
    "id": "310",
    "category": "3.8数据结构之图",
    "title": "310:Is It A Tree?",
    "description": "A tree is a well-known data structure that is either empty (null, void, nothing) or is a set of one or more nodes connected by directed edges between nodes satisfying the following properties. <br><br>There is exactly one node, called the root, to which no directed edges point. <br>Every node except the root has exactly one edge pointing to it. <br>There is a unique sequence of directed edges from the root to each node. <br>For example, consider the illustrations below, in which nodes are represented by circles and edges are represented by lines with arrowheads. The first two of these are trees, but the last is not. <br><center><img src=\"http://media.openjudge.cn/images/1308_1.jpg\"></center><br>In this problem you will be given several descriptions of collections of nodes connected by directed edges. For each of these you are to determine if the collection satisfies the definition of a tree or not.",
    "img": "",
    "inputTip": "The input will consist of a sequence of descriptions (test cases) followed by a pair of negative integers. Each test case will consist of a sequence of edge descriptions followed by a pair of zeroes Each edge description will consist of a pair of integers; the first integer identifies the node from which the edge begins, and the second integer identifies the node to which the edge is directed. Node numbers will always be greater than zero.",
    "inputStyle": "输入",
    "outputTip": "输出",
    "outputStyle": "For each test case display the line \"Case k is a tree.\" or the line \"Case k is not a tree.\", where k corresponds to the test case number (they are sequentially numbered starting with 1).",
    "inputExample": "<pre>6 8  5 3  5 2  6 4\n5 6  0 0\n\n8 1  7 3  6 2  8 9  7 5\n7 4  7 8  7 6  0 0\n\n3 8  6 8  6 4\n5 3  5 6  5 2  0 0\n-1 -1</pre>",
    "outputExample": "<pre>Case 1 is a tree.\nCase 2 is a tree.\nCase 3 is not a tree.</pre>",
    "tip": "North Central North America 1997",
    "timeLimited": "1000ms",
    "spaceLimited": "65536kB"
  },
  {
    "id": "3529",
    "category": "3.8数据结构之图",
    "title": "3529:Professor John",
    "description": "<p>Professor John is investigating a math problem. He has obtained some relations among several variables. Now he would like to know if there are any other relations that can be deduced from these obtained ones. For example, the known relations are given as follows: A < B, C > B and C < D, other relations including A < C, A < D and B < D can be deduced. Since he has been working for too long, Professor John decides to grant himself a vacation while assigning you to do the job. Are you ready?</p>",
    "img": "",
    "inputTip": "The first line of input contains an integer N, which is the number of test cases. Then N test cases follow. For each test case: the 1st line contains a positive integer m (<= 100) which is the number of given relations; the following m lines each contains a given relation, in the format Variable1 < Variable2 or Variable1 > Variable2A \"Variable\" is represented by a capital character. There will not be conflicting relations given.",
    "inputStyle": "输入",
    "outputTip": "输出",
    "outputStyle": "For each test case, first print in one line \"Case d:\" where d is the number of the test case, start counting from 1. Then output all the relations which can be deduced from the given relations in alphabetical order, in the format Variable1 < Variable2. Each relation occupies one line. No extra space shall be printed. The given relations must NOT be included. If no new relation is found, output \"NONE\" in one line.",
    "inputExample": "<pre>2\n3\nA<b c=\"\">B\nC<d 2=\"\" a<b=\"\" c<d=\"\" <=\"\" pre=\"\"></d></b></pre>",
    "outputExample": null,
    "tip": "",
    "timeLimited": "1000ms",
    "spaceLimited": "65536kB"
  }
]